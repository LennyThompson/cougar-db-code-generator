// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using CougarDb.Models.Cougar.StoredProcedures;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace CougarDb.Models.Context.StoredProcedures
{
    public partial interface ICougarStoredProcedureContextProcedures
    {
        Task<int> abandon_card_based_accountAsync(decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<account_transaction_summariseResult>> account_transaction_summariseAsync(decimal? account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, decimal? amount, decimal? new_bal, string status, byte? system_id, string desc, int? trans_id, short? member_site, double? exchange_rate, decimal? object_id_1, decimal? object_id_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_audit_recordAsync(short? site_id, string user_id, short? operation_id, DateTime? l_datetime, DateTime? a_datetime, int? egm_serialno, int? player_id, int? amount, string comment, int? amount_2, string comment1, string comment2, string comment3, string comment4, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_barrel_draw_logAsync(short? site_id, decimal? promotion_id, int? ticket_number, DateTime? ticket_datetime, int? patron_card_id, decimal? patron_id, int? member_id, int? egm_serial_number, decimal? criterion_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_barrel_draw_log_v2Async(short? site_id, decimal? promotion_id, int? ticket_number, DateTime? ticket_datetime, int? patron_card_id, decimal? patron_id, int? member_id, int? egm_serial_number, decimal? criterion_id, DateTime? purge_datetime, string printed_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_acc_balance_varianceAsync(short? site_id, DateTime? variance_datetime, decimal? cbg_account_id, int? actual_balance, int? expected_balance, int? variance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_cash_transactionAsync(decimal? cbg_account_id, DateTime? transaction_dt, int? card_id, byte? cbg_account_trans_type, short? site_id, decimal? amount, decimal? new_balance, int? egm_serial_number, string user_id, short? css_site_id, int? transaction_id, decimal? employee_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_cash_transaction_v2Async(decimal? cbg_account_id, DateTime? transaction_dt, int? card_id, byte? cbg_account_trans_type, short? site_id, decimal? amount, decimal? new_balance, int? egm_serial_number, string user_id, short? css_site_id, int? transaction_id, decimal? employee_id, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? cheque_amount, string cheque_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_cash_transaction_v3Async(decimal? cbg_account_id, DateTime? transaction_dt, int? card_id, byte? cbg_account_trans_type, short? site_id, decimal? amount, decimal? new_balance, int? egm_serial_number, string user_id, short? css_site_id, int? transaction_id, decimal? employee_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_cash_transaction_v4Async(decimal? cbg_account_id, DateTime? transaction_dt, int? card_id, byte? cbg_account_trans_type, short? site_id, decimal? amount, decimal? new_balance, int? egm_serial_number, string user_id, short? css_site_id, int? transaction_id, decimal? employee_id, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? cheque_amount, string cheque_number, decimal? cash_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_patronAsync(decimal? patron_id, decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_account_pinAsync(decimal? cbg_account_id, string pin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_auditAsync(short? site_id, decimal? cbg_account_id, short? cbg_audit_operation_id, DateTime? audit_operation_datetime, DateTime? logged_datetime, string description, string user_id, string supervisor_id, int? egm_serial_number, decimal? amount_1, decimal? amount_2, string comment_1, string comment_2, string comment_3, string comment_4, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_audit_v2Async(short? site_id, decimal? cbg_account_id, short? cbg_audit_operation_id, DateTime? audit_operation_datetime, DateTime? logged_datetime, string description, string user_id, string supervisor_id, int? egm_serial_number, decimal? amount_1, decimal? amount_2, string comment_1, string comment_2, string comment_3, string comment_4, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_audit_v3Async(short? site_id, decimal? cbg_account_id, short? cbg_audit_operation_id, DateTime? audit_operation_datetime, DateTime? logged_datetime, string description, string user_id, string supervisor_id, int? egm_serial_number, decimal? amount_1, decimal? amount_2, string comment_1, string comment_2, string comment_3, string comment_4, int? session_id, int? device_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_inactive_accountsAsync(decimal? cbg_account_id, short? site_id, int? account_balance, DateTime? inactive_datetime, string inactive_account_status, DateTime? closed_datetime, string funds_transferred_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cbg_site_balance_summaryAsync(short? site_id, DateTime? balance_datetime, int? total_player_balance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_config_groupAsync(string group_name, string item_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_config_itemAsync(int? site_id, string group_name, string item_name, int? number_1, string string_1, DateTime? date_1, decimal? decimal_1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_cpi_audit_recordAsync(short? site_id, byte? transaction_type_id, DateTime? transaction_datetime, string server, DateTime? response_datetime, int? card_id, int? amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_css_audit_recordAsync(string user_id, short? operation_id, DateTime? l_datetime, DateTime? a_datetime, byte? system_id, short? css_site_id, decimal? emp_id, decimal? patron_id, int? device, decimal? amount_1, decimal? amount_2, string comment1, string comment2, string comment3, string comment4, string comment5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_css_config_groupAsync(string group_name, string item_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_css_eventAsync(DateTime? event_dt, DateTime? logged_dt, int? seq_no, byte? system_id, short? css_site_id, int? card_id, int? css_game, short? css_device, int? css_event, decimal? amount_1, decimal? amount_2, string description, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_css_event_v2Async(DateTime? event_dt, DateTime? logged_dt, int? seq_no, byte? system_id, short? css_site_id, int? card_id, int? css_game, short? css_device, int? css_event, decimal? amount_1, decimal? amount_2, string description, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_css_site_to_groupAsync(byte? system_id, short? css_site_id, short? group_id, string site_premises, string grp_premises, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_egmAsync(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_verno, short? prog_sig_tim, string touch_scrn, string coin_accptr, string hop_pres, string tik_ptr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_egm_gameAsync(int? egm_ser_num, short? gme_num, int? gme_type_id, int? curr_var_num, short? jp_grp_id, string enbld_flag, short? jp_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<add_floor_controlResult>> add_floor_controlAsync(short? site_id, int? host_sn, string fc_name, short? weighting, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_game_typeAsync(int? id, short? gme_ver_num, string desc, string style, short? jp_levels, short? man_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_game_variationAsync(int? game_type_id, int? game_var_no, int? rtp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_locationAsync(short? site_id, short? floor, short? bank, short? pos, int? egm_ser_num, string pager_pos, string sec_id, string loop_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_loopAsync(short? site_id, string loop_name, string fc_name, string loop_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_loop_V2Async(short? site_id, string loop_name, string fc_name, string loop_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_network_device_eventAsync(short? site_id, DateTime? event_datetime, DateTime? logged_datetime, decimal? network_device_id, short? event_category_id, string event_description, int? amount, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_network_device_transactionAsync(int? site_id, decimal? network_device_id, DateTime? transaction_datetime, decimal? transaction_id, int? network_device_transaction_type_id, decimal? ticket_number, int? egm_serial_number, decimal? cbg_account_id, int? card_id, decimal? amount, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_network_device_transaction_v2Async(int? site_id, decimal? network_device_id, DateTime? transaction_datetime, decimal? transaction_id, int? network_device_transaction_type_id, decimal? ticket_number, int? egm_serial_number, decimal? cbg_account_id, int? card_id, decimal? amount, string user_id, decimal? barcode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pager_rating_gradeAsync(decimal? pager_id, int? rating_grade_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_patron_accountAsync(decimal? patron_id, decimal? account_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_player_exclusion_host_auditAsync(decimal? transaction_id, short? site_id, decimal? patron_id, byte? transaction_type_id, byte? exclusion_type_id, DateTime? transaction_datetime, string user_id, string comment_1, string comment_2, string transaction_change_type, DateTime? audit_datetime, string host_user_id, short? new_exclusion_type_id, string new_comment_1, string new_comment_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_player_exclusion_host_audit_V2Async(decimal? transaction_id, short? site_id, decimal? patron_id, byte? transaction_type_id, string exclusion_type_id, DateTime? transaction_datetime, string user_id, string comment_1, string comment_2, string transaction_change_type, DateTime? audit_datetime, string host_user_id, string new_exclusion_type_id, string new_comment_1, string new_comment_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_player_exclusion_transactionAsync(decimal? transaction_id, short? site_id, decimal? patron_id, byte? transaction_type_id, DateTime? transaction_datetime, string user_id, string comment_1, string comment_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_poolAsync(short? site_id, int? pool_num, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, int? current_val, DateTime? cur_val_dt, DateTime? last_hit, string wghted_flag, int? cur_fil_val, int? cur_ovrflow, string prze_share, int? update_time, string sub_type, string status, int? autopay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_deviceAsync(short? pl_site_id, int? pool_num, int? egm_ser_num, short? gme_num, int? lh_meter, int? overflow, string dev_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_groupAsync(short? site_id, short? group_id, string desc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_group_levelAsync(short? site_id, short? jp_grp_id, short? level_num, short? pool_site, int? pool_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_group_v2Async(short? site_id, short? group_id, string desc, string group_type, string shared_progressive_flag, DateTime? date_retired, int? approval_number, string approval_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_v2Async(short? site_id, int? pool_num, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, int? current_val, DateTime? cur_val_dt, DateTime? last_hit, string wghted_flag, int? cur_fil_val, int? cur_ovrflow, string prze_share, int? update_time, string sub_type, string status, int? autopay, double? total_rtp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_pool_v3Async(short? site_id, int? pool_num, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, int? current_val, DateTime? cur_val_dt, DateTime? last_hit, string wghted_flag, int? cur_fil_val, int? cur_ovrflow, string prze_share, int? update_time, string sub_type, string status, int? autopay, double? total_rtp, double? auxiliary_rtp, string level_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_portAsync(short? site_id, int? host_sn, short? port, string loop_name, short? weighting, string remote_port, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_port_V2Async(short? site_id, int? host_sn, short? port, string loop_name, short? weighting, string remote_port, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_qogr_approved_technicianAsync(string name, string licence_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_qogr_files_sent_recordAsync(string filename, string date_sent, string the_file, int? no_of_recs, string date_of_data, short? licence_op_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_qogr_seal_approvalAsync(short? site_id, int? serial_number, DateTime? start_datetime, string name, string licence_number, string old_seal_number, string new_seal_number, int? authority_number, short? device_type_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_report_usageAsync(short? site_id, string report_name, DateTime? run_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_reports_to_max_sysAsync(string report_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_siteAsync(short? id, int? licence_num, string licence_name, string premises, string address, string locality, string state, string country, string post_code, string contact_name, string phone, string fax, string pager, string mobile, string email, string lic_op, short? app_egm_nums, string lic_type, string lic_status, DateTime? lic_date, DateTime? expiry_date, string stat_div, int? app_loc_id, string jurisdiction, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_site_controllerAsync(short? site_id, int? host_ser_num, string desc, string prim_na, string sec_na, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_site_controller_v2Async(short? site_id, int? host_ser_num, string desc, string prim_na, string sec_na, string master, int? mate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_site_group_memberAsync(byte? gp_host_sys, short? gp_host_site, short? mem_site, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_site_v2Async(short? id, int? licence_num, string licence_name, string premises, string address, string locality, string state, string country, string post_code, string contact_name, string phone, string fax, string pager, string mobile, string email, string lic_op, short? app_egm_nums, string lic_type, string lic_status, DateTime? lic_date, DateTime? expiry_date, string stat_div, int? app_loc_id, string jurisdiction, short? jurisdiction_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_third_party_eventAsync(int? site_id, DateTime? event_datetime, short? third_party_event_type_id, string source, int? egm_serial_number, decimal? ticket_number, string terminal_id, short? third_party_terminal_type_id, string additional_data, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<add_tito_lock_transactionResult>> add_tito_lock_transactionAsync(decimal? ticket_barcode, DateTime? transaction_datetime, short? site_id, short? tito_ticket_transaction_type_id, int? amount, short? tito_implementation_type_id, int? egm_serial_number, short? floor, short? bank, short? position, string ssan, short? denomination_id, string user_id, decimal? network_device_id, decimal? ticket_number, string lock_token, string holder, int? duration, string reason, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_tito_ticket_transactionAsync(decimal? ticket_barcode, DateTime? transaction_datetime, short? site_id, short? tito_ticket_transaction_type_id, int? amount, short? tito_implementation_type_id, int? egm_serial_number, short? floor, short? bank, short? position, string ssan, short? denomination_id, string user_id, decimal? network_device_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> add_tito_ticket_transaction_v2Async(decimal? ticket_barcode, DateTime? transaction_datetime, short? site_id, short? tito_ticket_transaction_type_id, int? amount, short? tito_implementation_type_id, int? egm_serial_number, short? floor, short? bank, short? position, string ssan, short? denomination_id, string user_id, decimal? network_device_id, decimal? ticket_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ALH_new_cardmem_numbersAsync(short? site_id, decimal? card_id, int? membership_id, string card_status, string member_status, string patron_id, string account_id, int? card_type_id, string card_funct, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ALH_points_inResult>> ALH_points_inAsync(string transaction_id, decimal? card_id, DateTime? datetime, decimal? points_amount, int? membership_id, string points_category, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ALH_replacement_cardsAsync(short? site_id, decimal? card_id, int? membership_id, string card_status, int? card_type_id, string card_funct, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ALH_update_member_detailAsync(short? site_id, decimal? card_id, int? membership_id, string name_title, string first_name, string last_name, string pos_addr1, string pos_addr2, string locality, string state_prov, string country, string post_code, string sex, string hm_phone, string mobile, DateTime? dob, int? rating_grade_id, DateTime? creation_date, string status, string mail_out, string patron_groups, DateTime? modified_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> authenticate_userAsync(int? card_id, string secret_access_reply, OutputParameter<string> first_name, OutputParameter<string> last_name, OutputParameter<string> email, OutputParameter<string> user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<card_session_summariseResult>> card_session_summariseAsync(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<card_session_summarise_v2Result>> card_session_summarise_v2Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, DateTime? session_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<card_session_summarise_v3Result>> card_session_summarise_v3Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, DateTime? session_start_datetime, byte? conrad_card_issue_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<card_session_summarise_v4Result>> card_session_summarise_v4Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, DateTime? session_start_datetime, decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> check_batch_update_bet_restrctAsync(decimal? patron_id, byte? system_id, short? css_game_type_id, short? summary_level, int? limit_amount, DateTime? last_update_datetime, string update_this_site_only, short? css_site_id, DateTime? edit_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<check_batch_update_patronResult>> check_batch_update_patronAsync(decimal? patron_id, string first_name, string middle_initial, string last_name, string other_name, string name_title, string res_address_1, string res_address_2, string res_locality, string res_state_province, string res_country, string res_postal_code, string postal_address_1, string postal_address_2, string locality, string state_province, string country, string postal_code, string home_telephone, string work_telephone, string fax, string mobile, string email, string next_of_kin, string next_of_kin_telephone, DateTime? date_of_birth, string sex, string status, string update_this_site_only, short? system_id, short? css_site_id, DateTime? edit_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> check_batch_update_patron_bankAsync(decimal? patron_banking_id, decimal? patron_id, string banking_type, string sub_banking_type, DateTime? expiry_datetime, string detail_1, string detail_2, string detail_3, short? priority, string update_this_site_only, short? system_id, short? css_site_id, DateTime? edit_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> check_batch_update_single_colAsync(byte? system_id, short? css_site_id, string table_name, string column_name, string identity_description, string record_unique_id, DateTime? edit_datetime, string update_this_site_only, string user_id, string old_string, DateTime? old_datetime, int? old_int, OutputParameter<string> new_string, OutputParameter<DateTime?> new_datetime, OutputParameter<int?> new_int, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> check_bet_limitsAsync(int? card_id, string patron_id, byte? system_id, short? css_site_id, int? amount_numeric, short? css_game_type_id, DateTime? start_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> clean_out_string_for_likeAsync(string replace_character_with, string character_clean_out_list, OutputParameter<string> string_to_be_clean, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> clear_campaignAsync(string campaign_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> clear_cash_withdrawal_balancesAsync(short? site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> clear_cash_withdrawal_balances_v2Async(short? site_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DatesToReReportDM0Result>> DatesToReReportDM0Async(DateTime? EarliestDate, DateTime? LatestDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_downtime_summariseResult>> egm_downtime_summariseAsync(int? serial_num, short? site_id, DateTime? start_dt, short? sum_level, int? min_down, int? min_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_game_meters_summariseResult>> egm_game_meters_summariseAsync(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_game_meters_summarise_v2Result>> egm_game_meters_summarise_v2Async(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, int? total_games_won, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_game_meters_summarise_v3Result>> egm_game_meters_summarise_v3Async(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, int? total_games_won, int? gvn, int? ssan, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summariseResult>> egm_meters_summariseAsync(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_accountsResult>> egm_meters_summarise_accountsAsync(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? rec_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_accts_v2Result>> egm_meters_summarise_accts_v2Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? rec_count, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_accts_v3Result>> egm_meters_summarise_accts_v3Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? rec_count, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_accts_v4Result>> egm_meters_summarise_accts_v4Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? rec_count, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, int? i_ssan, int? i_bgvn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_v2Result>> egm_meters_summarise_v2Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? rec_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_v3Result>> egm_meters_summarise_v3Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? rec_count, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<egm_meters_summarise_v4Result>> egm_meters_summarise_v4Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? rec_count, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> egm_note_countAsync(short? site_id, DateTime? buy_date, int? no_5, int? no_10, int? no_20, int? no_50, int? no_100, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_card_based_accountsAsync(short? creation_site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_cardsAsync(short? creation_css_site, DateTime? last_mod, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_cards_v2Async(short? creation_css_site, DateTime? last_mod, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<expire_egm_ticket_transactionsResult>> expire_egm_ticket_transactionsAsync(short? site, DateTime? last_action_date, int? min_tr_cashier_time, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_egm_transactionsAsync(short? site, DateTime? last_action_date, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_patronsAsync(short? creation_css_site, DateTime? last_mod, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_patrons_v2Async(short? creation_css_site, DateTime? last_mod, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> expire_vouchersAsync(short? css_site, DateTime? exp_date, int? exp_months, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<extract_barrel_draw_log_from_summaryResult>> extract_barrel_draw_log_from_summaryAsync(int? site_id, DateTime? from_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<F1SAFFileDataResult>> F1SAFFileDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> fri_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<game_meters_perfmon_summariseResult>> game_meters_perfmon_summariseAsync(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? gvn, int? rtp, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? lp_wins, int? erp_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<game_meters_summariseResult>> game_meters_summariseAsync(short? site_id, short? summary_level, DateTime? start_datetime, int? ssan, int? game_version_number, short? denomination_id, int? rtp, int? egm_serial_number, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? lp_wins, int? erp_wins, int? wa_lp_wins, int? wa_erp_wins, int? wa_contributions, int? minutes_play_in_period, int? total_playable_minutes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_account_balancesResult>> get_account_balancesAsync(decimal? account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_accounts_to_purgeResult>> get_accounts_to_purgeAsync(short? css_site_id, decimal? point_purge_configuruation_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_ALH_balance_summaryAsync(DateTime? start_datetime, OutputParameter<string> balance_summary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_ALH_rating_gradeAsync(string description, OutputParameter<int?> rating_grade_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_alh_session_id_processedAsync(string session_id, OutputParameter<string> processed, OutputParameter<DateTime?> processed_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_atc_default_card_typeAsync(OutputParameter<int?> card_type_id, OutputParameter<string> card_funct, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_atc_file_in_detailAsync(OutputParameter<DateTime?> file_datetime, OutputParameter<int?> increment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_atc_file_out_incrementAsync(DateTime? file_datetime, OutputParameter<int?> file_increment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_barrel_draw_log_records_to_summariseResult>> get_barrel_draw_log_records_to_summariseAsync(DateTime? from_datetime, int? period, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_base_detailsAsync(int? card_id, OutputParameter<string> first_name, OutputParameter<string> mid_initial, OutputParameter<string> last_name, OutputParameter<string> other_name, OutputParameter<DateTime?> dob, OutputParameter<string> email, OutputParameter<string> pos_addr1, OutputParameter<string> pos_addr2, OutputParameter<string> locality, OutputParameter<string> post_code, OutputParameter<string> state_prov, OutputParameter<string> country, OutputParameter<string> hm_phone, OutputParameter<string> wk_phone, OutputParameter<string> mobile, OutputParameter<string> detail_1, OutputParameter<string> detail_2, OutputParameter<string> user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_batch_confirm_pendingResult>> get_batch_confirm_pendingAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_bet_limitsAsync(int? card_id, byte? system_id, short? css_site_id, short? css_game_type_id, OutputParameter<int?> month_restriction, OutputParameter<int?> month_restriction_rem, OutputParameter<DateTime?> month_update_dt, OutputParameter<int?> day_restriction, OutputParameter<int?> day_restriction_rem, OutputParameter<DateTime?> day_update_dt, OutputParameter<int?> day_pending, OutputParameter<int?> month_pending, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_cash_balanceAsync(int? card_id, string user_id, OutputParameter<string> available_balance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_cbg_account_cash_balanceAsync(decimal? cbg_account_id, OutputParameter<string> balance, OutputParameter<decimal?> cash_withdrawal_balance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_cbg_account_pinAsync(decimal? cbg_account_id, OutputParameter<string> pin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_cbg_host_inactive_accountsResult>> get_cbg_host_inactive_accountsAsync(DateTime? reconciliation_date, string zero_balance_cipher_text, short? restrict_to_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_cbg_host_site_account_balancesResult>> get_cbg_host_site_account_balancesAsync(DateTime? reconciliation_date, string zero_balance_cipher_text, short? restrict_to_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_cbg_site_session_keyAsync(short? site_id, OutputParameter<string> session_key, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_cbg_terminal_master_keyAsync(short? site_id, string term_id, OutputParameter<string> master_key, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_cbg_unreconciled_transactionsResult>> get_cbg_unreconciled_transactionsAsync(DateTime? reconciliation_date, short? restrict_to_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_clearance_configAsync(int? site_id, DateTime? clearance_start_datetime, OutputParameter<DateTime?> day_start_datetime, OutputParameter<DateTime?> session_start_datetime, OutputParameter<DateTime?> session_end_datetime, OutputParameter<DateTime?> month_start_datetime, OutputParameter<DateTime?> year_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_css_site_aging_detailsAsync(byte? system_id, short? css_site_id, byte? track_type, DateTime? cur_per_dt, OutputParameter<int?> cur_period, OutputParameter<byte?> mths_per_p, OutputParameter<short?> aging_pds, OutputParameter<DateTime?> first_p_dt, OutputParameter<int?> mths_to_cm, OutputParameter<int?> mths_to_cp, OutputParameter<short?> first_aging, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_daily_spendAsync(int? card_id, OutputParameter<int?> daily_spend, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_device_configResult>> get_device_configAsync(int? site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_excluded_patron_analysisResult>> get_excluded_patron_analysisAsync(string filter_site_selection, string filter_patron_selection, string filter_by_first_name, string filter_by_other_name, string filter_by_locality, string filter_by_country, string filter_by_postal_code, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_excluded_s_patron_analysisResult>> get_excluded_s_patron_analysisAsync(decimal? id, DateTime? date_of_birth, string last_name, string first_name, string other_name, string res_address_1, string res_address_2, string res_locality, string res_state_province, string res_country, string res_postal_code, string filter_by_first_name, string filter_by_other_name, string filter_by_locality, string filter_by_country, string filter_by_postal_code, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_floor_crt_available_payoutsResult>> get_floor_crt_available_payoutsAsync(decimal? employee_id, string include_cheque_payouts, decimal? ticket_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_keno_ticket_statusAsync(string ticket_number, string user_id, OutputParameter<int?> amount_bet, OutputParameter<int?> amount_won, OutputParameter<int?> amount_cancelled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_monthly_depositAsync(decimal? cbg_account_id, OutputParameter<decimal?> monthly_deposit, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_next_id_controlAsync(string table_name, string column_name, OutputParameter<int?> id_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_patron_group_membershipAsync(string patron_id, OutputParameter<string> group_string, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_point_purge_config_for_dateResult>> get_point_purge_config_for_dateAsync(short? css_site_id, DateTime? searchdate, string dayofweek, byte? weeknum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_qogr_limitAsync(decimal? cbg_account_id, byte? qogr_type_id, OutputParameter<decimal?> amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_spend_reward_for_cardResult>> get_spend_reward_for_cardAsync(int? card_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_spend_time_periodAsync(byte? time_period, OutputParameter<int?> card_id, OutputParameter<int?> daily_spend, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_summary_level_configAsync(int? sum_lev, int? site_id, DateTime? start_dt, OutputParameter<DateTime?> ret_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> get_summary_level_config_cssAsync(int? sum_lev, int? css_site_id, DateTime? start_dt, OutputParameter<DateTime?> ret_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_tag_configResult>> get_tag_configAsync(int? site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<get_transaction_lockResult>> get_transaction_lockAsync(short? site_id, decimal? target_id, string target_type, int? duration, string holder, OutputParameter<string> token, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> increment_master_cardAsync(int? increment, OutputParameter<int?> init_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insert_egm_metersAsync(short? site_id, DateTime? log_dt, int? ser_num, short? denom, short? game_num, int? game_var_num, int? stroke, int? turnover, int? wins, int? can_cred, int? hop_fil, int? coins_in, int? coins_out, int? coins_to_cb, int? cless_cr_in, int? cless_cr_out, int? notes_in, int? notes_count, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, OutputParameter<decimal?> i_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> insert_egm_meters_v2Async(short? site_id, DateTime? log_dt, int? ser_num, short? denom, short? game_num, int? game_var_num, int? stroke, int? turnover, int? wins, int? can_cred, int? hop_fil, int? coins_in, int? coins_out, int? coins_to_cb, int? cless_cr_in, int? cless_cr_out, int? notes_in, int? notes_count, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<decimal?> i_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> is_hostAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> is_jackpot_pool_suspendedAsync(short? site_id, int? pool_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<jackpot_meters_summariseResult>> jackpot_meters_summariseAsync(short? site_id, int? pool_number, short? pool_site_id, DateTime? start_dt, short? sum_level, int? serial_num, short? denomination, int? ssan, int? bgvn, short? floor, short? bank, short? position, short? pool_group_id, double? total_rtp, double? increment, int? reset, int? maximum, int? turnover, int? wins, int? lp_wins, int? sap_wins, int? erp_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<jackpot_summariseResult>> jackpot_summariseAsync(short? p_site_id, int? pool_num, int? serial_num, short? egm_site_id, short? game_num, int? var_num, short? denomination, short? sum_level, DateTime? start_dt, int? contribution, int? increment, int? rounding, int? hit_count, int? hit_amt, int? sp_1, int? sp_2, int? sp_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<jng_lockResult>> jng_lockAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_poolAsync(short? site_id, int? pool_num, int? cur_value, DateTime? cur_val_dt, DateTime? last_hit, int? cur_ovrflw, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_cur_fillAsync(short? site_id, int? pool_num, int? cur_fil_val, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_cur_ovrflowAsync(short? site_id, int? pool_num, int? cur_ovrflw, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_cur_valAsync(short? site_id, int? pool_num, int? cur_value, DateTime? cur_val_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_date_retiredAsync(short? site_id, int? pool_num, DateTime? retired, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_incrementAsync(short? site_id, int? pool_num, double? inc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_last_hitAsync(short? site_id, int? pool_num, DateTime? last_hit, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_max_autopayAsync(short? site_id, int? pool_num, int? autopay, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_otherAsync(short? site_id, int? pool_num, string pool_name, string wghted_flag, string prze_share, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_other_v2Async(short? site_id, int? pool_num, string pool_name, string wghted_flag, string prze_share, string sub_pool, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_other_v3Async(short? site_id, int? pool_num, string pool_name, string wghted_flag, string prze_share, string sub_pool, double? total_rtp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_other_v4Async(short? site_id, int? pool_num, string pool_name, string wghted_flag, string prze_share, string sub_pool, double? total_rtp, double? auxiliary_rtp, string level_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_reset_and_maxAsync(short? site_id, int? pool_num, int? reset, int? max_val, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_statusAsync(short? site_id, int? pool_num, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> jpc_update_pool_update_timeAsync(short? site_id, int? pool_num, int? update_time, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> k_get_patron_extraAsync(int? card_id, string patron_extra_type_id, string user_id, OutputParameter<string> detail_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_get_patron_statementResult>> k_get_patron_statementAsync(string account_id, int? card_id, DateTime? from_datetime, DateTime? to_datetime, DateTime? last_logged_datetime, int? max_no_of_transactions, byte? tracking_type_id, int? system_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> k_i_g_play_summariseAsync(int? card_id, int? css_site_id, short? sum_level, DateTime? start_datetime, short? css_game_type_id, DateTime? logged_datetime, int? no_of_games, int? bet, int? win, int? cancelled, int? cancelled_game, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> k_keno_agency_reconcileAsync(int? reconcile_day, short? css_site_id, DateTime? logged_datetime, int? cash_deposit, int? cash_withdrawal, int? bet, int? win, int? cancelled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> k_keno_play_summariseAsync(int? card_id, short? sum_level, DateTime? start_datetime, short? css_site_id, DateTime? logged_datetime, string keno_ticket_number, string ticket_description, int? no_of_games, int? bet, int? win, int? cancelled, int? first_game_number, int? last_game_number, int? cancelled_game, string keno_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_account_trans_combineResult>> k_log_account_trans_combineAsync(int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc, string user_id, string call_pending_first, int? reconcile_day, OutputParameter<string> account_id, OutputParameter<string> new_bal, OutputParameter<int?> trans_id, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_account_trans_pendingResult>> k_log_account_trans_pendingAsync(int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_datetime, DateTime? period_datetime, string amount, string status, byte? system_id, string desc, string user_id, OutputParameter<string> account_id, OutputParameter<string> new_bal, OutputParameter<int?> trans_id, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_account_trans_updateResult>> k_log_account_trans_updateAsync(short? css_site_id, int? trans_id, string status, DateTime? period_datetime, DateTime? logged_datetime, int? reconcile_day, OutputParameter<byte?> track_type, OutputParameter<int?> card_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_i_g_bet_trans_completeResult>> k_log_i_g_bet_trans_completeAsync(int? card_id, short? sum_level, DateTime? start_datetime, byte? trans_type, short? css_site_id, DateTime? logged_datetime, string amount, string status, string update_avail, short? css_game_type_id, int? no_of_games, int? no_of_cancelled_games, OutputParameter<string> account_id, OutputParameter<int?> trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_i_g_bet_trans_pendingResult>> k_log_i_g_bet_trans_pendingAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, short? css_site_id, DateTime? logged_datetime, string amount, string status, short? css_game_type_id, string user_id, OutputParameter<int?> trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_i_g_bet_trans_updateResult>> k_log_i_g_bet_trans_updateAsync(short? css_site_id, int? trans_id, string status, DateTime? period_datetime, DateTime? logged_datetime, int? css_game_type_id, int? no_of_games, OutputParameter<byte?> track_type, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_keno_bet_cancel_completeResult>> k_log_keno_bet_cancel_completeAsync(string account_id, int? card_id, short? sum_level, DateTime? start_datetime, byte? trans_type, byte? system_id, short? css_site_id, DateTime? logged_datetime, string amount, string status, string desc, string update_avail, int? reconcile_day, string keno_ticket_number, int? first_game_number, int? last_game_number, int? no_of_cancelled_games, string keno_serial_number, short? css_site_id_bet, string user_id, OutputParameter<int?> trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_keno_bet_trans_completeResult>> k_log_keno_bet_trans_completeAsync(string account_id, int? card_id, short? sum_level, DateTime? start_datetime, byte? trans_type, byte? system_id, short? css_site_id, DateTime? logged_datetime, string amount, string status, string update_avail, int? reconcile_day, string keno_ticket_number, string ticket_description, int? no_of_games, int? first_game_number, int? last_game_number, string keno_serial_number, OutputParameter<int?> trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_keno_bet_trans_pendingResult>> k_log_keno_bet_trans_pendingAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? system_id, short? css_site_id, DateTime? logged_datetime, string amount, string status, string user_id, OutputParameter<int?> trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<k_log_keno_bet_trans_updateResult>> k_log_keno_bet_trans_updateAsync(byte? system_id, short? css_site_id, int? trans_id, string status, DateTime? period_datetime, DateTime? logged_datetime, int? reconcile_day, string keno_ticket_number, string ticket_description, int? no_of_games, int? first_game_number, int? last_game_number, string keno_serial_number, OutputParameter<byte?> track_type, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> k_update_patron_extraAsync(int? card_id, string patron_extra_type_id, string detail_value, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> link_employee_to_egm_transAsync(short? site_id, int? card_id, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> link_player_to_egm_transAsync(short? site_id, int? card_id, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> link_player_to_egm_trans_V2Async(short? site_id, int? card_id, int? egm_serial_number, decimal? tick_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> link_ticket_number_tito_transactionAsync(decimal? ticket_barcode, DateTime? transaction_datetime, decimal? ticket_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_agingResult>> log_account_trans_agingAsync(string account_id, DateTime? start_dt, byte? track_type, short? css_site_id, DateTime? logged_dt, byte? system_id, OutputParameter<int?> card_id, OutputParameter<string> rtn_age_amt, OutputParameter<string> rtn_new_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_aging_gResult>> log_account_trans_aging_gAsync(decimal? account_id, DateTime? start_dt, byte? track_type, short? css_site_id, DateTime? logged_dt, byte? system_id, OutputParameter<int?> card_id, OutputParameter<decimal?> rtn_age_amt, OutputParameter<decimal?> rtn_new_bal, OutputParameter<decimal?> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_aging_hostResult>> log_account_trans_aging_hostAsync(byte? css_site_id, byte? system_id, short? owner_site_id, DateTime? start_dt, DateTime? logged_dt, string check_aging_required, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_aging_siteResult>> log_account_trans_aging_siteAsync(string account_id, int? card_id, DateTime? start_dt, byte? tracking_type_id, short? css_site_id, DateTime? logged_dt, byte? system_id, string rtn_age_amt, string rtn_new_bal, string rtn_avail, short? owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_cancelledResult>> log_account_trans_cancelledAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, string amount, string status, byte? system_id, string desc, int? trans_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_cancelled_gResult>> log_account_trans_cancelled_gAsync(decimal? account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, decimal? amount, string status, byte? system_id, string desc, int? trans_id, double? exchange_rate, decimal? object_id_1, decimal? object_id_2, OutputParameter<decimal?> return_bal, OutputParameter<decimal?> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_completeResult>> log_account_trans_completeAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc, int? trans_id, string user_id, OutputParameter<string> new_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_complete_gResult>> log_account_trans_complete_gAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc, int? trans_id, string user_id, OutputParameter<string> new_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_deltasResult>> log_account_trans_deltasAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc, int? trans_id, string update_avail, OutputParameter<string> new_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_deltas_gResult>> log_account_trans_deltas_gAsync(decimal? account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, decimal? amount, string status, byte? system_id, string desc, int? trans_id, string update_avail, double? exchange_rate, OutputParameter<decimal?> new_bal, OutputParameter<decimal?> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_mid_status_gResult>> log_account_trans_mid_status_gAsync(decimal? account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, decimal? amount, string status, byte? system_id, string desc, int? trans_id, OutputParameter<decimal?> new_bal, OutputParameter<decimal?> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_pend_tfrResult>> log_account_trans_pend_tfrAsync(string acc_id_from, string acc_id_to, int? card_id_from, int? card_id_to, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc_from, string desc_to, int? trans_id, string user_id, OutputParameter<string> new_bal_from, OutputParameter<string> new_bal_to, OutputParameter<string> rtn_avail_frm, OutputParameter<string> rtn_avail_to, OutputParameter<short?> owner_site_fr, OutputParameter<short?> owner_site_to, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_pend_tfr_gResult>> log_account_trans_pend_tfr_gAsync(decimal? acc_id_from, decimal? acc_id_to, int? card_id_from, int? card_id_to, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, decimal? amount, string status, byte? system_id, string desc_from, string desc_to, int? trans_id, OutputParameter<decimal?> new_bal_from, OutputParameter<decimal?> new_bal_to, OutputParameter<decimal?> rtn_avail_frm, OutputParameter<decimal?> rtn_avail_to, OutputParameter<short?> owner_site_fr, OutputParameter<short?> owner_site_to, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_pendingResult>> log_account_trans_pendingAsync(string account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, string amount, string status, byte? system_id, string desc, int? trans_id, string user_id, OutputParameter<string> new_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_pending_gResult>> log_account_trans_pending_gAsync(decimal? account_id, int? card_id, short? sum_level, DateTime? start_dt, byte? trans_type, byte? track_type, short? css_site_id, DateTime? logged_dt, DateTime? period_dt, decimal? amount, string status, byte? system_id, string desc, int? trans_id, string allow_negative_balance_flag, double? exchange_rate, OutputParameter<decimal?> new_bal, OutputParameter<decimal?> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_updateResult>> log_account_trans_updateAsync(short? css_site_id, int? trans_id, string status, DateTime? period_dt, DateTime? logged_dt, OutputParameter<byte?> track_type, OutputParameter<int?> card_id, OutputParameter<string> return_bal, OutputParameter<string> rtn_avail, OutputParameter<short?> owner_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_account_trans_update_tfrResult>> log_account_trans_update_tfrAsync(short? css_site_id, int? trans_id, string status, DateTime? period_dt, DateTime? logged_dt, OutputParameter<byte?> track_type, OutputParameter<int?> card_id_1, OutputParameter<int?> card_id_2, OutputParameter<string> ret_bal_1, OutputParameter<string> ret_bal_2, OutputParameter<string> rtn_avail_1, OutputParameter<string> rtn_avail_2, OutputParameter<short?> owner_site_1, OutputParameter<short?> owner_site_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_ALH_balance_historyAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_atc_file_in_processedAsync(DateTime? file_datetime, int? increment, string success, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltasResult>> log_card_session_deltasAsync(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, string pts_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltas_gResult>> log_card_session_deltas_gAsync(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltas_g_v2Result>> log_card_session_deltas_g_v2Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, DateTime? session_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltas_g_v3Result>> log_card_session_deltas_g_v3Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, decimal? pts_amount, DateTime? session_start_datetime, decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltas_v2Result>> log_card_session_deltas_v2Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, string pts_amount, DateTime? session_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_card_session_deltas_v3Result>> log_card_session_deltas_v3Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, string pts_amount, DateTime? session_start_datetime, decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_conrad_session_detailsResult>> log_conrad_session_detailsAsync(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, string pts_amount, DateTime? end_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_conrad_session_details_v2Result>> log_conrad_session_details_v2Async(byte? system_id, int? card_id, short? sum_level, DateTime? start_dt, short? css_site_id, DateTime? logged_dt, int? egm_ser_no, short? denom_id, short? game_no, int? game_var, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? jackpot_wins, string pts_amount, DateTime? end_dt, byte? conrad_card_issue_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_cashless_transaction_summaryResult>> log_egm_cashless_transaction_summaryAsync(short? site_id, int? egm_serial_number, short? summary_level, DateTime? transaction_datetime, short? floor, short? bank, short? position, string ssan, short? denomination_id, int? egm_cashless_transaction_type_id, decimal? cashless_credit_in, decimal? cashless_credit_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltasResult>> log_egm_deltasAsync(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_accountsResult>> log_egm_deltas_accountsAsync(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_accounts_v2Result>> log_egm_deltas_accounts_v2Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_accounts_v3Result>> log_egm_deltas_accounts_v3Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_accounts_v4Result>> log_egm_deltas_accounts_v4Async(short? site_id, int? serial_num, short? denomination, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? act_short_p, int? act_hop_f, int? act_can_cred, int? cheques, int? floor, int? bank, int? position, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, int? ssan, int? bgvn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_v2Result>> log_egm_deltas_v2Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_v3Result>> log_egm_deltas_v3Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_v4Result>> log_egm_deltas_v4Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_deltas_v5Result>> log_egm_deltas_v5Async(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, int? egm_config_num, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? a_can_cred, int? a_hop_fil, int? a_coins_in, int? a_coins_out, int? a_exp_ctcb, int? a_act_ctcb, int? a_cc_in, int? a_cc_out, int? a_exp_naa, int? a_act_naa, int? a_exp_nic, int? a_act_nic, int? a_short_pays, int? a_jackpots, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? hopper, int? actualshortpays, int? a_hopper_fills, int? a_can_credits, int? gamingcheques, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, int? actual_total_egm_cash_ticket_in, int? actual_ticket_printer_out, string downloadable_flag, int? is_host_ret, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_egm_downtimeResult>> log_egm_downtimeAsync(int? serial_num, short? site_id, DateTime? start_dt, int? min_down, int? min_avail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_eventAsync(short? site_id, DateTime? event_dt, DateTime? logged_dt, int? seq_number, short? event_type, short? man_id, int? serial_num, short? denom, short? game_num, int? game_var_num, decimal? meters_id, int? amount, int? amount2, int? pool_num, string add_data, int? psite_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_event_with_metersAsync(short? site_id, DateTime? event_dt, DateTime? logged_dt, int? seq_number, short? event_type, short? man_id, int? serial_num, short? denom, short? game_num, int? game_var_num, int? amount, int? amount2, int? pool_num, string add_data, int? psite_id, int? stroke, int? turnover, int? wins, int? can_cred, int? hop_fil, int? coins_in, int? coins_out, int? coins_to_cb, int? cless_cr_in, int? cless_cr_out, int? notes_in, int? notes_count, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_event_with_meters_v2Async(short? site_id, DateTime? event_dt, DateTime? logged_dt, int? seq_number, short? event_type, short? man_id, int? serial_num, short? denom, short? game_num, int? game_var_num, int? amount, int? amount2, int? pool_num, string add_data, int? psite_id, int? stroke, int? turnover, int? wins, int? can_cred, int? hop_fil, int? coins_in, int? coins_out, int? coins_to_cb, int? cless_cr_in, int? cless_cr_out, int? notes_in, int? notes_count, int? sap_wins, int? lp_wins, int? notes_5, int? notes_10, int? notes_20, int? notes_50, int? notes_100, int? trcr_turn, int? trcr_wins, int? reserve_1, int? reserve_2, int? reserve_3, int? ticket_out, int? cents_in, int? cents_out, int? spare_1, int? spare_2, int? spare_3, int? total_egm_cash_ticket_in, int? total_egm_pid_accessed, int? total_egm_games_won, int? new_sap_wins, int? total_rejected_enabled_notes, int? total_egm_gamble_turnover, int? total_egm_gamble_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_game_deltasResult>> log_game_deltasAsync(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_game_deltas_v2Result>> log_game_deltas_v2Async(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, int? total_games_won, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_game_deltas_v3Result>> log_game_deltas_v3Async(short? site_id, int? serial_num, short? denomination, short? game_num, int? game_var_num, short? sum_level, DateTime? start_dt, int? stroke, int? turnover, int? wins, int? prog_wins, int? total_games_won, int? game_version_number, int? software_set_approval_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_game_meters_summaryResult>> log_game_meters_summaryAsync(short? site_id, short? summary_level, DateTime? start_datetime, int? ssan, int? game_version_number, short? denomination_id, int? rtp, int? egm_serial_number, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? lp_wins, int? erp_wins, int? wa_lp_wins, int? wa_erp_wins, int? wa_contributions, int? minutes_play_in_period, int? total_playable_minutes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_game_perfom_meter_deltasResult>> log_game_perfom_meter_deltasAsync(short? site_id, int? serial_num, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? gvn, int? rtp, short? floor, short? bank, short? position, int? stroke, int? turnover, int? wins, int? lp_wins, int? erp_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_headcountAsync(short? site_id, DateTime? time_int, short? floor, short? bank, int? head_count, int? turnover, int? wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_jackpot_contributionsAsync(short? site_id, int? pool_number, short? fcc_site_id, string fcc_name, int? current_amount, int? last_ref_amount, decimal? overflow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_jackpot_deltasResult>> log_jackpot_deltasAsync(short? site_id, int? egm_serial_number, short? sum_level, DateTime? start_dt, short? denomination, int? ssan, int? bgvn, short? floor, short? bank, short? position, int? turnover, int? wins, int? sap_wins, int? lp_wins, int? erp_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_jackpot_deltas_hitsResult>> log_jackpot_deltas_hitsAsync(short? site_id, int? pool_number, int? egm_serial_number, double? hit_amount, DateTime? hit_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_jackpot_deltas_waResult>> log_jackpot_deltas_waAsync(short? site_id, int? pool_number, int? egm_serial_number, double? hit_amount, DateTime? hit_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_jackpot_eventAsync(short? site_id, DateTime? event_dt, DateTime? logged_dt, int? seq_number, short? event_type, short? man_id, int? serial_num, short? denom, short? game_num, int? game_var_num, decimal? meters_id, int? amount, int? amount2, int? pool_num, string add_data, int? psite_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_jackpot_hit_adjustmentResult>> log_jackpot_hit_adjustmentAsync(short? site_id, int? pool_number, short? summary_level, DateTime? start_dt, int? egm_serial_number, short? denomination, int? ssan, int? bgvn, short? floor, short? bank, short? position, double? increment, double? total_rtp, int? reset, int? maximum, short? pool_group_id, short? pool_site_id, int? turnover, int? wins, int? sap_wins, int? lp_wins, int? erp_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<log_jackpot_summaryResult>> log_jackpot_summaryAsync(short? p_site_id, int? pool_num, int? serial_num, short? egm_site_id, short? game_num, int? var_num, short? denomination, short? sum_level, DateTime? start_dt, int? contribution, int? increment, int? rounding, int? hit_count, int? hit_amt, int? sp_1, int? sp_2, int? sp_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_jackpot_valuesAsync(short? site_id, DateTime? snapshot_datetime, int? current_value, int? pool_number, int? egm_serial_number, short? progressive_level, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_points_play_configuration_auditAsync(short? css_site_id, decimal? points_play_configuration_id, DateTime? audit_datetime, string user_id, string action, string description, string enabled_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_itemAsync(short? site_id, short? css_site_id, string sales_id, string item_code, string description, string category_code, string category_description, int? unit_price, int? cost_price, int? qty, int? sale_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_paymentAsync(short? site_id, short? css_site_id, string sales_id, string payment_code, string description, bool? is_points_payment, bool? is_cash_purchase_payment, int? tendered_amount, int? change_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_saleAsync(short? site_id, short? css_site_id, string sales_id, string terminal_id, string terminal_name, string location_id, string location_name, int? card_id, DateTime? sale_date, int? sale_total, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_sale_v2Async(short? site_id, short? css_site_id, string sales_id, string terminal_id, string terminal_name, string location_id, string location_name, int? card_id, DateTime? sale_date, int? sale_total, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_taxAsync(short? site_id, short? css_site_id, string sales_id, string tax_code, string description, int? amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_pos_transaction_valueAsync(short? css_site_id, int? transaction_id, decimal? value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_processed_alh_session_idAsync(string session_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_spend_reward_criterion_auditAsync(short? css_site_id, decimal? spend_reward_criterion_id, DateTime? audit_datetime, string user_id, string criteria, string action, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_spend_reward_eventAsync(decimal? spend_reward_criterion_id, short? css_site_id, int? card_id, int? egm_serial_number, DateTime? reward_datetime, decimal? rating_grade_id, short? tracking_type_id, short? spend_reward_reset_timer_id, int? points_value, int? spend_value, short? repeat_count, int? actual_spend_value, short? actual_repeat_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_win_reward_conversion_auditAsync(short? css_site_id, decimal? win_reward_criterion_id, DateTime? audit_datetime, string user_id, string action, int? rating_grade_id, short? tracking_type_id, short? conversion_rate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_win_reward_criterion_auditAsync(short? css_site_id, decimal? win_reward_criterion_id, DateTime? audit_datetime, string user_id, string action, string description, int? minimum_win_threshold, short? tracking_type_id, string colour, string enabled_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> log_win_reward_eventAsync(decimal? win_reward_criterion_id, short? css_site_id, int? card_id, int? egm_serial_number, DateTime? reward_datetime, short? tracking_type_id, int? win_value, int? actual_win_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<max_epay_get_payments_v2Result>> max_epay_get_payments_v2Async(short? SiteID, DateTime? StartDate, DateTime? EndDate, int? PageNumber, int? ItemsPerPage, OutputParameter<int?> TotalPages, OutputParameter<int?> TotalRecords, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<max_epay_pending_payouts_v2Result>> max_epay_pending_payouts_v2Async(short? SiteID, string UserID, decimal? TicketID, byte? Threshold, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<meters_txt_fileResult>> meters_txt_fileAsync(int? siteid, DateTime? date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<meters_txt_headerResult>> meters_txt_headerAsync(int? siteid, DateTime? date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> mon_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> purge_deleteAsync(string sql, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> purge_delete_v2Async(string sql, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> QOGRReportDatesUpdateAsync(int? YYYY, byte? MM, byte? DD, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> QOGRSetEODDefaultReportDateAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<reassign_egm_transactionResult>> reassign_egm_transactionAsync(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, string location, int? cash_amount, int? cheque_amount, string cheque_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> reissue_egm_transactionAsync(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, string cancelled, int? amount, short? pool_site_id, int? pool_num, string user_id, int? player_id, string comment_1, string comment_2, string comment_3, decimal? new_tick_num, string new_status, string new_cancel, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> reissue_egm_transaction_v2Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, string cancelled, int? amount, short? pool_site_id, int? pool_num, string user_id, int? player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, string new_cancel, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<reissue_egm_transaction_v3Result>> reissue_egm_transaction_v3Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<reissue_egm_transaction_v4Result>> reissue_egm_transaction_v4Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, string location, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<reissue_egm_transaction_v5Result>> reissue_egm_transaction_v5Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, string location, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<reissue_egm_transaction_v6Result>> reissue_egm_transaction_v6Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, decimal? new_tick_num, string new_status, string location, int? cash_amount, int? cheque_amount, string cheque_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> reissue_redemption_voucherAsync(decimal? voucher_num, short? system_id, short? css_site_id, decimal? account_id, decimal? patron_id, DateTime? creation_dt, DateTime? expiry_dt, decimal? redemption_id, int? amount, int? quantity, string comment_1, string comment_2, string comment_3, string status, DateTime? last_dt, decimal? new_voucher_num, string new_status, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_accountAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_account_summaryAsync(decimal? account_id, int? card_id, byte? track_type, short? first_aging, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_all_pool_devicesAsync(short? pl_site_id, int? egm_ser_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_all_pool_group_levelsAsync(short? site_id, short? jp_grp_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_criterionAsync(short? site_id, decimal? promotion_id, decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_locationAsync(short? site_id, decimal? promotion_id, decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_messageAsync(short? site_id, decimal? promotion_id, byte? priority, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_prizeAsync(short? site_id, decimal? promotion_id, short? draw_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_promotionAsync(short? site_id, decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_barrel_draw_ticket_eligibilityAsync(short? site_id, decimal? promotion_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_batch_cardAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_batch_confirm_typeAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_bet_restrictionAsync(decimal? patron_id, byte? system_id, int? game_type, short? summary, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_campaign_patronAsync(string campaign_id, decimal? patron_id, short? site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_cardAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_card_accountAsync(byte? system_id, int? card_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_card_typeAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_categoryAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_category_pager_eventAsync(decimal? pager_event_id, decimal? category_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_cbg_account_pinAsync(decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_cbg_card_accountAsync(decimal? cbg_account_id, int? card_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_charge_groupAsync(short? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_charge_group_memberAsync(short? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_charge_itemAsync(string id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_chart_of_accountsAsync(string gl_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_cheque_levelAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_component_configAsync(short? site_id, int? h_serial_num, string inst_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_config_groupAsync(string group_name, string item_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_config_itemAsync(int? site_id, string group_name, string item_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_conrad_accountAsync(int? account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_count_file_typeAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_countryAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_css_config_groupAsync(string group_name, string group_item, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_css_config_itemAsync(byte? system_id, short? site_id, string group_name, string item_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_css_siteAsync(short? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_css_site_from_groupAsync(byte? system_id, short? css_site_id, short? group_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_db_purge_recordAsync(short? site_id, string table_name, int? priority, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_eft_end_of_dayAsync(short? site_id, DateTime? start_dt, string gl_code, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_eft_end_of_day_v2Async(string charge_item_id, short? site_id, DateTime? start_datetime, string gl_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_eft_gl_mappingsAsync(string feeline_gl_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_eft_rejectionAsync(short? site_id, DateTime? logged_date, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egmAsync(int? egm_ser_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_clearanceAsync(short? site_id, string clearance_type, DateTime? start_datetime, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_clearance_entryAsync(short? site_id, DateTime? entry_datetime, int? egm_serial_number, string clearance_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_device_configAsync(int? egm_serial_number, short? device_type_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_gameAsync(int? egm_ser_num, short? gme_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_meters_limitAsync(string type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_network_limitAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_services_loopAsync(short? current_site_id, int? egm_ser_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_tedAsync(int? egm_serial_number, byte? ted_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_templateAsync(short? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_transactionAsync(short? site_id, int? tick_num, int? egm_ser_num, DateTime? trans_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_egm_turbo_wedgeAsync(int? egm_serial_number, short? site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_employeeAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_equationAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_file_distributionAsync(short? site_id, string set_name, string set_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_file_storeAsync(string file_name, string version, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_file_working_setAsync(string file_name, string version, string set_name, string set_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<remove_floor_controlResult>> remove_floor_controlAsync(short? site_id, int? host_sn, string fc_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_floor_view_detailAsync(short? site_id, int? ser_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_floor_view_masterAsync(short? site_id, short? floor_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_game_typeAsync(short? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_game_variationAsync(short? game_type_id, int? game_var_no, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_identification_groupAsync(short? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_identification_itemAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_jackpot_contributionsAsync(short? site_id, int? pool_number, short? fcc_site_id, string fcc_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_jurisdictionAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_locationAsync(short? site_id, short? floor, short? bank, short? pos, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_location_midmAsync(short? site_id, short? floor, short? bank, short? pos, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_loopAsync(short? site_id, string loop_name, string fc_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_loop_device_applicationAsync(byte? system_id, short? css_site_id, byte? hw_dev, string app_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_loop_device_msg_textAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_loyalty_unitAsync(short? site_id, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_manufacturerAsync(short? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<remove_max_change_game_configResult>> remove_max_change_game_configAsync(string id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_max_change_request_detailAsync(string id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_maxbonus_ticketAsync(short? site_id, int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_membership_typeAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_money_boxAsync(short? site_id, int? box_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_network_deviceAsync(decimal? id, short? site_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_network_device_typeAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_network_device_v2Async(decimal? id, short? site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pagerAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pager_categoryAsync(decimal? pager_id, decimal? category_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pager_eventAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pager_rating_gradeAsync(decimal? pager_id, int? rating_grade_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pager_transportAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pager_zoneAsync(decimal? pager_id, int? zone_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patronAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_acc_permissionAsync(decimal? account_id, decimal? patron_id, short? permission, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_accountAsync(decimal? patron_id, decimal? account_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_age_groupAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_associationAsync(short? css_site_id, decimal? parent_patron_id, decimal? associate_patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_bankingAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_extraAsync(decimal? patron_id, decimal? patron_extra_type_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_extra_typeAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_groupAsync(int? group, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_group_memberAsync(decimal? patron, int? group, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_identificationAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_preferenceAsync(decimal? patron, int? group, int? type, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_preference_groupAsync(int? group, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_patron_preference_typeAsync(int? group, int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_player_exclusion_patron_typesAsync(short? site_id, decimal? transaction_id, decimal? patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_player_exclusion_transactionAsync(decimal? transaction_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_configurationAsync(decimal? id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_membership_noAsync(decimal? id, decimal? point_purge_configuration_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_membership_typeAsync(decimal? point_purge_configuration_id, int? membership_type_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_pat_statusAsync(decimal? point_purge_configuration_id, string patron_status, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_ratingAsync(decimal? point_purge_configuration_id, int? rating_grade_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_point_purge_timeframeAsync(decimal? id, decimal? point_purge_configuration_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_points_play_configurationAsync(decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_points_play_denominationAsync(decimal? points_play_configuration_id, decimal? drawdown_denomination_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_points_play_rating_gradeAsync(decimal? points_play_configuration_id, decimal? rating_grade_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_points_play_tracking_typeAsync(decimal? points_play_configuration_id, byte? tracking_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_poolAsync(short? site_id, int? pool_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pool_deviceAsync(short? pl_site_id, int? pool_num, int? egm_ser_num, short? game_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pool_groupAsync(short? site_id, short? group_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_pool_group_levelAsync(short? site_id, short? jp_grp_id, short? level_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_portAsync(short? site_id, int? host_sn, short? port, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_port_v2Async(short? site_id, int? host_sn, short? port, string loop_name, short? weighting, string remote_port, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_prizedrawAsync(int? id, int? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_rating_gradeAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_redemption_itemAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_redemption_voucherAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_reports_to_max_sysAsync(string report_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_s_batch_confirm_typeAsync(decimal? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_security_groupingsAsync(short? site_id, string group_name, string user_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_security_groupings_unloadAsync(short? site_id, string group_name, string user_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_security_infoAsync(short? site_id, string application, string window, string control, string user_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_security_usersAsync(short? site_id, string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_security_users_unloadAsync(short? site_id, string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_site_controllerAsync(short? site_id, int? host_ser_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_site_drop_varianceAsync(short? site_id, DateTime? start_datetime, string entry_type, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_site_group_memberAsync(byte? gp_host_sys, short? gp_host_site, short? mem_site, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_spend_reward_criterionAsync(decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_state_provinceAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_system_siteAsync(short? css_site_id, byte? system_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_system_site_track_typeAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_tax_rateAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_track_type_permissionAsync(int? track_id, byte? trans_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_turnover_thresholdAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_turnover_threshold_grpAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_voucher_configAsync(short? site_id, int? voucher_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_voucher_sig_configAsync(int? id, short? site_id, int? voucher_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_voucher_signatureAsync(short? site_id, int? voucher_type_id, int? config_id, int? row_number, int? col_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_wab_group_memberAsync(short? group_site_id, short? member_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_win_reward_conversionAsync(short? css_site_id, decimal? win_reward_criterion_id, int? rating_grade_id, short? tracking_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_win_reward_criterionAsync(decimal? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_working_setAsync(string set_name, string set_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> remove_zoneAsync(int? id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_coin_count_clearanceResult>> report_coin_count_clearanceAsync(short? site_id, DateTime? count_start_datetime, DateTime? count_end_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_egm_jackpot_group_multi_variationsResult>> report_egm_jackpot_group_multi_variationsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_machine_note_denomResult>> report_machine_note_denomAsync(short? site_id, DateTime? count_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_machine_note_denom_2Result>> report_machine_note_denom_2Async(short? site_id, DateTime? count_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_machine_revenue_statResult>> report_machine_revenue_statAsync(short? site_id, DateTime? day_start_datetime, string financial_year, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_non_compliant_egm_jackpot_pool_game_variationsResult>> report_non_compliant_egm_jackpot_pool_game_variationsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_non_compliant_egm_jackpot_poolsResult>> report_non_compliant_egm_jackpot_poolsAsync(string linktype, string parameter, int? precision, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_non_compliant_egm_jackpot_pools_v2Result>> report_non_compliant_egm_jackpot_pools_v2Async(string linktype, string parameter, int? precision, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_non_compliant_jackpot_configsResult>> report_non_compliant_jackpot_configsAsync(string linktype, string parameter, int? precision, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<report_note_count_clearanceResult>> report_note_count_clearanceAsync(short? site_id, DateTime? count_start_datetime, DateTime? count_end_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> revoke_transaction_lockAsync(short? site_id, decimal? target_id, string target_type, string holder, string reason, OutputParameter<string> token, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<rpt_WAJWinsResult>> rpt_WAJWinsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sat_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<site_hourly_meters_summaryResult>> site_hourly_meters_summaryAsync(short? site_id, DateTime? start, DateTime? end, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_global_jackpot_performance_monthly_reportResult>> sp_global_jackpot_performance_monthly_reportAsync(DateTime? start_datetime, DateTime? end_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_mgw_weekly_analysis_reportResult>> sp_mgw_weekly_analysis_reportAsync(DateTime? startdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_send_cougar_dbmailAsync(string profile_name, string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string sensitivity, string file_attachments, string query, string execute_query_database, bool? attach_query_result_as_file, string query_attachment_filename, bool? query_result_header, int? query_result_width, string query_result_separator, bool? exclude_query_output, bool? append_query_error, bool? query_no_truncate, bool? query_result_no_padding, bool? outputData, OutputParameter<int?> mailitem_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sun_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> thu_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_JackpotMetersVsChargesReconciliationResult>> tp_JackpotMetersVsChargesReconciliationAsync(DateTime? DateFrom, DateTime? DateTo, int? StartDay, int? ThisYear, int? FullYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptALHWeeklyAnalysisResult>> tp_rptALHWeeklyAnalysisAsync(DateTime? startdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptColesWeeklyAnalysisResult>> tp_rptColesWeeklyAnalysisAsync(DateTime? startdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptEGMsIndividualPerformanceResult>> tp_rptEGMsIndividualPerformanceAsync(string Association, int? VenueID, DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptEGMsWeeklyPerformanceResult>> tp_rptEGMsWeeklyPerformanceAsync(string Association, int? VenueID, DateTime? DateFrom, DateTime? DateTo, int? StartDay, int? ThisYear, int? FullYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptEGMsWeeklyPerformanceDetailResult>> tp_rptEGMsWeeklyPerformanceDetailAsync(string Association, int? VenueID, DateTime? DateFrom, DateTime? DateTo, int? StartDay, int? ThisYear, int? FullYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptJokersJackpotEGMsResult>> tp_rptJokersJackpotEGMsAsync(DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<tp_rptWeeklyAnalysisResult>> tp_rptWeeklyAnalysisAsync(DateTime? startdate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TransferMC0MonthlyResult>> TransferMC0MonthlyAsync(DateTime? MonthDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TransferQOGRInfoResult>> TransferQOGRInfoAsync(string ViewName, int? TimeLimit, int? YYYY, byte? MM, byte? DD, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TransferSakuraInfoResult>> TransferSakuraInfoAsync(int? TimeLimit, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> tue_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_accountAsync(decimal? id, byte? creat_sys, short? creat_site, string acct_name, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, DateTime? last_mod, string cash_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_account_balanceAsync(decimal? account_id, byte? track_type, decimal? balance, decimal? avail_bal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_account_statusAsync(decimal? id, string status, DateTime? last_mod, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_account_summaryResult>> update_account_summaryAsync(decimal? account_id, int? card_id, byte? track_type, DateTime? period_dt, decimal? amount, byte? system_id, short? css_site_id, DateTime? start_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_account_v2Async(decimal? id, byte? creat_sys, short? creat_site, string acct_name, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, DateTime? last_mod, string cash_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_attend_egm_transactionAsync(short? site_id, decimal? ticket_number, int? egm_serial_number, DateTime? transaction_datetime, string user_id, DateTime? last_action_datetime, string attendant_id, string attendant_user_id, string attendant_name, DateTime? attend_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_criterionAsync(short? site_id, decimal? promotion_id, decimal? id, string enabled_flag, string criterion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_extra_detailsAsync(short? site_id, decimal? barrel_draw_promotion_id, DateTime? actual_draw_start, DateTime? actual_draw_end, int? total_ticket_count, byte? number_of_prizes, string enabled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_extra_details_v2Async(short? site_id, decimal? barrel_draw_promotion_id, DateTime? actual_draw_start, DateTime? actual_draw_end, int? total_ticket_count, short? number_of_prizes, string enabled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_locationAsync(short? site_id, decimal? promotion_id, decimal? id, short? floor, short? bank, short? position, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_log_printedAsync(short? site_id, decimal? promotion_id, int? ticket_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_log_summaryAsync(short? site_id, decimal? promotion_id, DateTime? start_datetime, int? patron_card_id, decimal? patron_id, int? member_id, int? egm_serial_number, decimal? criterion_id, DateTime? purge_datetime, int? count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_messageAsync(short? site_id, decimal? promotion_id, short? priority, string enabled_flag, string message_text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_prizeAsync(short? site_id, decimal? promotion_id, short? draw_number, string prize_description, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_prize_V2Async(short? site_id, decimal? promotion_id, short? draw_number, short? draw_sequence, string prize_description, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promo_v2Async(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_hours_bitmap, string enable_user_reporting_flag, decimal? printer_id, DateTime? purge_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promo_v3Async(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_hours_bitmap, string enable_user_reporting_flag, decimal? printer_id, DateTime? purge_datetime, string kiosk_promotion_flag, int? points_award, byte? system_site_tracking_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promo_v4Async(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_hours_bitmap, string enable_user_reporting_flag, decimal? printer_id, DateTime? purge_datetime, string kiosk_promotion_flag, int? points_award, byte? system_site_tracking_type_id, string display_on_kiosk, DateTime? draw_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promo_v5Async(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_hours_bitmap, string enable_user_reporting_flag, decimal? printer_id, DateTime? purge_datetime, string kiosk_promotion_flag, int? points_award, byte? system_site_tracking_type_id, string display_on_kiosk, DateTime? draw_datetime, string virtual_draw_flag, short? display_previous_winners_days, string display_details, string draw_message, DateTime? actual_draw_start, DateTime? actual_draw_end, int? total_ticket_count, byte? number_of_prizes, short? draw_animation_seconds, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promo_v6Async(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_halfhours_bitmap, string enable_user_reporting_flag, decimal? printer_id, DateTime? purge_datetime, string kiosk_promotion_flag, int? points_award, byte? system_site_tracking_type_id, string display_on_kiosk, DateTime? draw_datetime, string virtual_draw_flag, short? display_previous_winners_days, string display_details, string draw_message, DateTime? actual_draw_start, DateTime? actual_draw_end, int? total_ticket_count, byte? number_of_prizes, short? draw_animation_seconds, short? display_winner_seconds, decimal? parent_promo_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_promotionAsync(short? site_id, decimal? id, string state_flag, DateTime? start_time, DateTime? stop_time, string description, string enabled_hours_bitmap, string enable_user_reporting_flag, decimal? printer_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_eligibilityAsync(short? site_id, decimal? promotion_id, short? mins_before_draw_tickets_can_be_validated, string validate_by_kiosk_activity_flag, string validate_by_egm_activity_flag, string validate_by_pos_activity_flag, string validate_by_barrel_draw_ticket_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summaryAsync(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summary_v2Async(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, short? ticket_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summary_v3Async(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summary_v4Async(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, short? ticket_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summary_v5Async(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, short? ticket_count, DateTime? event_time, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_ticket_summary_v6Async(short? site_id, decimal? barrel_draw_promotion_id, decimal? patron_id, short? ticket_count, DateTime? event_time, string is_host, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_winnersAsync(short? site_id, decimal? barrel_draw_promotion_id, int? ticket_number, decimal? patron_id, int? member_id, int? rating_grade_id, byte? prize_number, DateTime? drawn_datetime, int? membership_type_id, string claimed_flag, string prize, string promotion_description, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_barrel_draw_winners_v2Async(short? site_id, decimal? barrel_draw_promotion_id, int? ticket_number, decimal? patron_id, int? member_id, int? rating_grade_id, short? prize_number, DateTime? drawn_datetime, int? membership_type_id, string claimed_flag, string prize, string promotion_description, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_base_detailsAsync(int? card_id, string other_name, string email, string pos_addr1, string pos_addr2, string locality, string post_code, string state_prov, string hm_phone, string wk_phone, string mobile, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_batch_cardAsync(decimal? id, byte? creat_sys, short? creat_site, string disp_name, decimal? card_holder, int? card_type, short? pin, string password, string pinpw_stat, byte? pinpw_fail, DateTime? pw_expiry, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, DateTime? last_mod, int? card_rat, decimal? account_id, byte? holder_type, string card_funct, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_batch_confirm_statusAsync(string record_unique_id, string sys_site_batch_confirm_type, DateTime? edit_datetime, string new_status, string user_id_two, DateTime? last_action_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_batch_confirm_typeAsync(int? id, string description, string table_name, string column_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_bet_limitsAsync(int? card_id, byte? system_id, short? css_game_type_id, int? month_restriction, int? day_restriction, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_bet_restrictionAsync(decimal? patron_id, byte? system_id, int? game_type, short? summary, int? limit, int? pending_amount, DateTime? last_update, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_campaignAsync(string id, short? site_id, string name, DateTime? start_datetime, DateTime? end_datetime, string active_flag, string kiosk_message, short? tracking_type_id, int? point_value, int? cash_value, string ticket_text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_campaign_patronAsync(string campaign_id, decimal? patron_id, short? site_id, string redeemed_flag, DateTime? notification_sent_datetime, DateTime? redeemed_datetime, DateTime? eligible_start_datetime, DateTime? eligible_end_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cardAsync(int? id, byte? creat_sys, short? creat_site, string disp_name, decimal? card_holder, int? card_type, short? pin, string password, string pinpw_stat, byte? pinpw_fail, DateTime? pw_expiry, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, DateTime? last_mod, int? card_rat, byte? holder_type, string card_funct, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_accountAsync(byte? system_id, int? card_id, decimal? account_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_layoutAsync(short? css_site_id, int? card_type_id, string column_name, int? x_position, int? y_position, string on_card, string text_bold, string column_text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_layout_v2Async(short? css_site_id, int? card_type_id, string column_name, int? x_position, int? y_position, string on_card, string text_bold, string column_text, byte? font_size, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_ratingAsync(int? id, int? rating, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_statusAsync(int? id, string status, DateTime? last_mod, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_typeAsync(int? id, byte? system_id, short? site_id, byte? holder_type, string description, string card_funct, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_card_validationAsync(int? id, DateTime? last_val_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_cashier_float_balanceResult>> update_cashier_float_balanceAsync(short? site_id, DateTime? start_datetime, int? start_balance_actual, int? cash_in_amount, int? cash_out_amount, int? cheque_amount, DateTime? finish_datetime, int? finish_balance_actual, int? finish_balance_expected, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_cashier_float_balance_denominationsResult>> update_cashier_float_balance_denominationsAsync(short? site_id, DateTime? balance_datetime, short? cashier_denomination_id, int? quantity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cashier_float_balance_denominations_v2Async(short? site_id, DateTime? balance_datetime, short? cashier_denomination_id, int? denomination_total, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cashier_float_balance_v2Async(short? site_id, DateTime? start_datetime, int? start_balance_actual, int? cash_in_amount, int? cash_out_amount, int? gaming_cheques, int? egm_payouts, int? tito_ticket_payouts, int? hopper_refills, int? misc_payouts, int? my_cash_withdrawals, int? my_cash_deposits, DateTime? finish_datetime, int? finish_balance_actual, int? finish_balance_expected, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_categoryAsync(decimal? id, byte? system_id, short? css_site_id, string description, string comment_1, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_category_pager_eventAsync(decimal? pager_event_id, decimal? category_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_acc_cash_trans_summAsync(short? site_id, int? egm_serial_number, short? summary_level, DateTime? transaction_datetime, byte? cbg_account_cash_transaction_type_id, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_acc_expiry_datetimeAsync(decimal? cbg_account_id, DateTime? last_val_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_acc_last_validationAsync(decimal? cbg_account_id, DateTime? last_val_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_accountAsync(decimal? id, byte? cbg_account_type_id, string status, DateTime? expiry_datetime, DateTime? last_validated_datetime, short? creation_site_id, string pending_registration_flag, string first_time_kiosk_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balanceAsync(decimal? cbg_account_id, decimal? adjustment_amount, string new_bal_encrypted, decimal? new_balance, int? egm_serial_number, short? site_id, short? css_site_id, int? card_id, int? transaction_number, short? cbg_account_cash_transaction_type, decimal? employee_id, string user_id, decimal? cash_withdrawal_balance, DateTime? transaction_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balance_hostAsync(decimal? cbg_account_id, string balance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balance_host_v2Async(decimal? cbg_account_id, string balance, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balance_v2Async(decimal? cbg_account_id, decimal? adjustment_amount, string new_bal_encrypted, decimal? new_balance, int? egm_serial_number, short? site_id, short? css_site_id, int? card_id, int? transaction_number, short? cbg_account_cash_transaction_type, decimal? employee_id, string user_id, decimal? cash_withdrawal_balance, DateTime? transaction_datetime, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? cheque_amount, string cheque_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balance_v4Async(decimal? cbg_account_id, decimal? adjustment_amount, string new_bal_encrypted, decimal? new_balance, int? egm_serial_number, short? site_id, short? css_site_id, int? card_id, int? transaction_number, short? cbg_account_cash_transaction_type, decimal? employee_id, string user_id, decimal? cash_withdrawal_balance, DateTime? transaction_datetime, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? cheque_amount, string cheque_number, decimal? cash_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_cash_balance_v5Async(decimal? cbg_account_id, decimal? adjustment_amount, string new_bal_encrypted, decimal? new_balance, int? egm_serial_number, short? site_id, short? css_site_id, int? card_id, int? transaction_number, short? cbg_account_cash_transaction_type, decimal? employee_id, string user_id, decimal? cash_withdrawal_balance, DateTime? transaction_datetime, short? floor, short? bank, short? position, string ssan, short? denomination_id, decimal? cheque_amount, string cheque_number, decimal? cash_amount, DateTime? event_time, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_patronAsync(decimal? patron_id, decimal? cbg_account_id, decimal? employee_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_pinAsync(decimal? cbg_account_id, string pin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_account_qogr_limitAsync(decimal? cbg_account_id, byte? cbg_account_qogr_limit_type_id, decimal? amount, string display_on_gemini_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_audit_operationAsync(short? cbg_audit_operation_id, string description, string log_to_database_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_audit_operation_v2Async(short? cbg_audit_operation_id, string description, string log_to_database_flag, string report_color, string amount1_format, string amount2_format, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_card_accountAsync(int? card_id, decimal? cbg_account_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_inactive_accountsAsync(decimal? transaction_id, decimal? cbg_account_id, short? site_id, int? account_balance, DateTime? inactive_datetime, string inactive_account_status, DateTime? closed_datetime, string funds_transferred_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cbg_qogr_account_limitsAsync(byte? cbg_qogr_account_limit_type_id, byte? cbg_account_type_id, short? site_id, decimal? default_amount, decimal? min_amount, decimal? max_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_charge_groupAsync(short? id, string description, short? group_type, int? group_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_charge_group_memberAsync(short? id, short? charge_group_id, int? member_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_charge_itemAsync(string id, string description, short? site_id, string gl_code, short? calculation_method_id, int? reference_id, string rate, DateTime? start_datetime, DateTime? end_datetime, string enabled, short? units, int? monthly_min_charge, int? monthly_max_charge, int? turnover_threshold_group_id, short? sweep_frequency, string charge_type, string gst_flag, string group_description, string eft_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_charge_item_V2Async(string id, string description, short? site_id, string gl_code, short? calculation_method_id, int? reference_id, string rate, DateTime? start_datetime, DateTime? end_datetime, string enabled, short? units, int? monthly_min_charge, int? monthly_max_charge, int? turnover_threshold_group_id, short? sweep_frequency, string charge_type, string gst_flag, string group_description, string eft_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_chart_of_accountsAsync(string gl_code, string dept_id, string description, short? report_section, string gst_gl_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_chequeAsync(decimal? id, string cheque_number, string issuing_body, decimal? account_id, int? amount, short? level_id, string status, DateTime? receive_dt, DateTime? lastaction_dt, DateTime? buyback_dt, short? day_hold_gra, short? day_hold_ext, string comment_1, string comment_2, short? css_site_id, int? transaction_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_cheque_levelAsync(short? id, string description, short? default_days, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_clearanceAsync(short? site_id, DateTime? clearance_start_datetime, string clearance_type, int? egm_serial_number, DateTime? egm_config_datetime, string money_box_number, string comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_acceptResult>> update_clearance_acceptAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? clearance_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_acceptallResult>> update_clearance_acceptallAsync(short? site_id, string entry_type, DateTime? clearance_start_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_adjustmentResult>> update_clearance_adjustmentAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? clearance_start_datetime, DateTime? egm_config_datetime, int? exp_stroke_cnt, int? exp_turnover_amt, int? exp_wins_amt, int? exp_cancelled_credits_amt, int? exp_hopper_fills_amt, int? exp_cents_in_amt, int? exp_cents_out_amt, int? exp_coins_in_cnt, int? exp_coins_out_cnt, int? exp_cashless_credit_in_amt, int? exp_cashless_credit_out_amt, int? exp_coins_to_dropbucket_amt, int? exp_coins_to_dropbucket_cnt, int? exp_notes_in_amt, int? exp_notes_in_cnt, int? exp_notes_in_cnt_5, int? exp_notes_in_cnt_10, int? exp_notes_in_cnt_20, int? exp_notes_in_cnt_50, int? exp_notes_in_cnt_100, int? exp_short_pays_amt, int? exp_jackpots_amt, int? exp_sap_wins_amt, int? exp_lp_wins_amt, int? exp_residual_turnover_amt, int? exp_residual_wins_amt, int? exp_ticket_printer_out_amt, int? exp_gaming_cheques_amt, int? act_cancelled_credits_amt, int? act_hopper_fills_amt, int? act_coins_to_dropbucket_amt, int? act_coins_to_dropbucket_cnt, int? act_notes_in_amt, int? act_notes_in_cnt, int? act_notes_in_cnt_5, int? act_notes_in_cnt_10, int? act_notes_in_cnt_20, int? act_notes_in_cnt_50, int? act_notes_in_cnt_100, int? act_short_pays_amt, int? act_jackpots_amt, int? act_sap_wins_amt, int? act_lp_wins_amt, int? spare_1, int? spare_2, int? spare_3, int? spare_4, int? spare_5, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_clearance_apvAsync(short? site_id, DateTime? entry_datetime, int? egm_serial_number, string ticket_number_c, DateTime? transaction_datetime, string transaction_type, string transaction_status, int? amount, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_clearResult>> update_clearance_clearAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_collectionResult>> update_clearance_collectionAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? egm_config_datetime, string money_box_number, int? coins_to_dropbucket_amt, int? coins_to_dropbucket_cnt, int? notes_in_amt, int? notes_in_cnt, int? notes_in_cnt_5, int? notes_in_cnt_10, int? notes_in_cnt_20, int? notes_in_cnt_50, int? notes_in_cnt_100, short? denomination_id, short? game_type_id, int? base_game_version_number, int? software_set_app_number, short? floor, short? bank, short? position, string comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_clearance_configAsync(short? site_id, int? egm_serial_number, DateTime? egm_config_datetime, short? denomination_id, short? game_type_id, int? base_game_version_number, int? software_set_app_number, short? floor, short? bank, short? position, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_countResult>> update_clearance_countAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? clearance_start_datetime, string money_box_number, string count_status, int? coins_to_dropbucket_amt, int? coins_to_dropbucket_cnt, int? notes_in_amt, int? notes_in_cnt, int? notes_in_cnt_5, int? notes_in_cnt_10, int? notes_in_cnt_20, int? notes_in_cnt_50, int? notes_in_cnt_100, short? token_id, int? token_weight, int? box_weight, int? coin_weight, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_countadjustResult>> update_clearance_countadjustAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? clearance_start_datetime, string money_box_number, int? exp_coins_to_dropbucket_amt, int? exp_coins_to_dropbucket_cnt, int? exp_notes_in_amt, int? exp_notes_in_cnt, int? exp_notes_in_cnt_5, int? exp_notes_in_cnt_10, int? exp_notes_in_cnt_20, int? exp_notes_in_cnt_50, int? exp_notes_in_cnt_100, int? act_coins_to_dropbucket_amt, int? act_coins_to_dropbucket_cnt, int? act_notes_in_amt, int? act_notes_in_cnt, int? act_notes_in_cnt_5, int? act_notes_in_cnt_10, int? act_notes_in_cnt_20, int? act_notes_in_cnt_50, int? act_notes_in_cnt_100, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_clearance_enddayResult>> update_clearance_enddayAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, DateTime? clearance_start_datetime, DateTime? egm_config_datetime, int? stroke_cnt, int? turnover_amt, int? wins_amt, int? cancelled_credits_amt, int? hopper_fills_amt, int? cents_in_amt, int? cents_out_amt, int? coins_in_cnt, int? coins_out_cnt, int? cashless_credit_in_amt, int? cashless_credit_out_amt, int? coins_to_dropbucket_amt, int? coins_to_dropbucket_cnt, int? notes_in_amt, int? notes_in_cnt, int? notes_in_cnt_5, int? notes_in_cnt_10, int? notes_in_cnt_20, int? notes_in_cnt_50, int? notes_in_cnt_100, int? short_pays_amt, int? jackpots_amt, int? sap_wins_amt, int? lp_wins_amt, int? residual_turnover_amt, int? residual_wins_amt, int? ticket_printer_out_amt, int? gaming_cheques_amt, short? denomination_id, short? game_type_id, int? base_game_version_number, int? software_set_app_number, short? floor, short? bank, short? position, string comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_clearance_summaryAsync(short? site_id, DateTime? clearance_start_datetime, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_coin_countAsync(short? site_id, DateTime? entry_datetime, string money_box_number, int? egm_serial_number, string count_status, int? coins_to_dropbucket_amt, int? coins_to_dropbucket_cnt, short? token_id, int? token_weight, int? box_weight, int? coin_weight, int? spare_1, int? spare_2, int? spare_3, DateTime? logged_datetime, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_column_bet_restrictionResult>> update_column_bet_restrictionAsync(string record_unique_id, string column_name, string column_value, string user_id, decimal? sys_site_batch_confirm_type, DateTime? edit_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_column_patronResult>> update_column_patronAsync(string record_unique_id, string column_name, string column_value, string user_id, decimal? sys_site_batch_confirm_type, DateTime? edit_datetime, string first_name, string middle_initial, string last_name, string other_name, string name_title, string res_address_1, string res_address_2, string res_locality, string res_state_province, string res_postal_code, string res_country, string postal_address_1, string postal_address_2, string locality, string state_province, string country, string postal_code, string home_telephone, string work_telephone, string fax, string mobile, string email, string next_of_kin, string next_of_kin_telephone, DateTime? date_of_birth, string sex, string status, DateTime? creation_datetime, DateTime? expiry_datetime, DateTime? suspend_start_datetime, DateTime? suspend_end_datetime, int? membership_id, int? membership_type_id, DateTime? last_session_datetime, string description, int? rating_grade_id, decimal? id, string old_value, DateTime? last_modified_datetime, int? jurisdiction_id, string mail_out_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_column_patron_bankingAsync(string record_unique_id, string column_name, string column_value, DateTime? last_modified_datetime, string user_id, decimal? sys_site_batch_confirm_type, DateTime? edit_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_component_configAsync(short? site_id, int? h_serial_num, string inst_name, short? weighting, short? inst_type, string st_params, short? comp_type, string db_depend, string exe_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_config_itemAsync(short? site_id, string group_name, string item_name, int? number_1, string string_1, DateTime? date_1, decimal? decimal_1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_conrad_accountAsync(int? account_id, string first_name, string last_name, int? card_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_count_file_typeAsync(decimal? id, string description, string extension, string separator, int? position_column, int? denomination_column, int? token_column, int? note_column, string note_count_type, int? coin_column, string coin_count_type, string row_heading, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_countryAsync(int? id, string desc, short? currency_id, string iso_code, string phone_prefix, string active_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_country_v2Async(int? id, string desc, short? currency_id, string iso_code, string phone_prefix, string active_flag, string detail_1, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_css_config_itemAsync(byte? system_id, short? site_id, string group_name, string item_name, int? number_1, string string_1, DateTime? date_1, decimal? decimal_1, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_css_encode_cardAsync(int? card_id, short? system_id, short? css_site_id, string encode_data, string status, DateTime? creation_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_css_encode_card_resultAsync(short? system_id, short? css_site_id, DateTime? creation_datetime, int? range_from, int? range_to, string output_file, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_css_siteAsync(short? id, string premises, string show_flag, string group_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_css_statusAsync(DateTime? modified_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_currencyAsync(short? id, string standard_abbreviation, string description, string comments, double? exchange_rate, string active_flag, decimal? threshold_1, decimal? threshold_2, decimal? threshold_3, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_database_versionAsync(int? site_id, string version, int? run_count, DateTime? dt_upgrade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_db_purge_recordAsync(short? site_id, string table_name, int? priority, int? max_rows_deleted, short? age_to_purge, string datetime_name, string additional_restrictions, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_db_purge_record_v3Async(short? site_id, string table_name, int? priority, int? max_rows_deleted, short? age_to_purge, string datetime_name, string additional_restrictions, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_db_purge_recordV2Async(short? site_id, string table_name, int? priority, int? max_rows_deleted, short? age_to_purge, string datetime_name, string additional_restrictions, string forced_index, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_device_hist_remove_gameAsync(short? site_id, int? egm_ser_num, string type, DateTime? date_from, DateTime? date_to, string comments, string comments2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_device_historyAsync(short? site_id, int? egm_ser_num, string type, DateTime? date_from, DateTime? date_to, string comments, string comments2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_device_history_egmAsync(short? site_id, int? egm_ser_num, string type, DateTime? date_from, DateTime? date_to, string comments, string comments2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_device_history_jackpotAsync(short? site_id, int? egm_ser_num, string type, DateTime? date_from, DateTime? date_to, string comments, string comments2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_end_of_dayAsync(short? site_id, DateTime? start_dt, string gl_code, string item_name, int? report_section, int? unit, decimal? rate, int? total, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_end_of_day_v2Async(short? site_id, DateTime? start_dt, string gl_code, string item_name, int? report_section, int? unit, decimal? rate, int? total, decimal? gst, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_end_of_day_v3Async(string charge_item_id, short? site_id, DateTime? start_datetime, string gl_code, string item_name, int? report_section, int? unit, string rate, int? total, string gst, string group_description, short? calculation_method_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_end_of_day_v5Async(string charge_item_id, short? site_id, DateTime? start_datetime, string gl_code, string item_name, int? report_section, int? unit, string rate, int? total, string gst, string group_description, short? calculation_method_id, string sweep_frequency, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_gl_mappingsAsync(string feeline_gl_code, string feeline_gst_gl_code, string maxgaming_gl_code, string maxgaming_gst_gl_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_misc_transactionAsync(short? site_id, int? id, DateTime? log_date, DateTime? trans_date, DateTime? ref_date, string gl_code, decimal? amount1, decimal? amount2, string desc2, string desc1, string desc3, string desc4, int? number1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_misc_transaction_v3Async(short? site_id, int? id, DateTime? log_date, DateTime? trans_date, DateTime? ref_date, string gl_code, decimal? amount1, decimal? amount2, string desc1, string desc2, string desc3, string desc4, int? number1, int? egm_serial_number, decimal? ticket_number, string bank_account_name, string bank_account_bsb, string bank_account_number, string desc5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_eft_rejectionAsync(short? site_id, DateTime? log_date, DateTime? eft_date, decimal? amount, string reason, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egmAsync(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_cashless_transaction_summaryResult>> update_egm_cashless_transaction_summaryAsync(short? site_id, int? egm_serial_number, short? summary_level, DateTime? transaction_datetime, short? floor, short? bank, short? position, string ssan, short? denomination_id, int? egm_cashless_transaction_type_id, decimal? cashless_credit_in, decimal? cashless_credit_out, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_clearanceAsync(short? site_id, string clearance_type, DateTime? start_datetime, int? egm_serial_number, DateTime? egm_config_datetime, string money_box_number, string clearance_status, DateTime? end_datetime, DateTime? last_entry_datetime, DateTime? logged_datetime, string comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_clearance_entryAsync(short? site_id, DateTime? entry_datetime, string entry_type, int? egm_serial_number, string clearance_type, DateTime? clearance_start_datetime, DateTime? reporting_datetime, DateTime? egm_config_datetime, string money_box_number, decimal? ticket_number, int? exp_stroke_cnt, int? exp_turnover_amt, int? exp_wins_amt, int? exp_cancelled_credits_amt, int? exp_hopper_fills_amt, int? exp_cents_in_amt, int? exp_cents_out_amt, int? exp_coins_in_cnt, int? exp_coins_out_cnt, int? exp_cashless_credit_in_amt, int? exp_cashless_credit_out_amt, int? exp_coins_to_dropbucket_amt, int? exp_coins_to_dropbucket_cnt, int? exp_notes_in_amt, int? exp_notes_in_cnt, int? exp_notes_in_cnt_5, int? exp_notes_in_cnt_10, int? exp_notes_in_cnt_20, int? exp_notes_in_cnt_50, int? exp_notes_in_cnt_100, int? exp_short_pays_amt, int? exp_jackpots_amt, int? exp_sap_wins_amt, int? exp_lp_wins_amt, int? exp_residual_turnover_amt, int? exp_residual_wins_amt, int? exp_ticket_printer_out_amt, int? exp_gaming_cheques_amt, int? act_cancelled_credits_amt, int? act_hopper_fills_amt, int? act_coins_to_dropbucket_amt, int? act_coins_to_dropbucket_cnt, int? act_notes_in_amt, int? act_notes_in_cnt, int? act_notes_in_cnt_5, int? act_notes_in_cnt_10, int? act_notes_in_cnt_20, int? act_notes_in_cnt_50, int? act_notes_in_cnt_100, int? act_short_pays_amt, int? act_jackpots_amt, int? act_sap_wins_amt, int? act_lp_wins_amt, int? spare_1, int? spare_2, int? spare_3, int? spare_4, int? spare_5, DateTime? logged_datetime, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_device_configAsync(int? egm_serial_number, short? device_type_id, string configuration_string, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_devicesAsync(short? cur_site_id, int? egm_serial_number, string note_acceptor_present, string touch_screen_present, string coin_acceptor_present, string hopper_present, string ticket_printer_present, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, string player_tracking_installed, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_gameAsync(int? egm_ser_num, short? gme_num, int? gme_type_id, int? curr_var_num, short? jp_grp_id, string enbld_flag, short? jp_site, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_game_bet_statisticsAsync(short? site_id, short? manufacturer_id, int? ssan, int? game_version_number, DateTime? start_datetime, short? denomination_id, int? max_lines, int? max_bet_per_line, int? game_bet_factor_a, int? game_bet_factor_b, int? number_of_elements, int? element_size, string bet_count_array_a, string bet_count_array_b, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_game_configurationAsync(short? site_id, int? egm_serial_number, DateTime? start_datetime, int? ssan, int? game_version_number, short? denomination_id, short? floor, short? bank, short? position, string site_opened, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_game_variationAsync(short? site_id, int? egm_serial_number, short? game_number, int? current_variation, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_limitsAsync(short? cur_site_id, int? egm_serial_number, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, int? max_denomination, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_max_meterAsync(int? egm_ser_num, int? max_meter_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_meters_limitAsync(string type, int? stroke, int? turnover, int? wins, int? cancel_credit, int? cents_in, int? cents_out, int? hopper_refill, int? token_in, int? token_out, int? token_to_cashbox, int? cashless_credit_in, int? cashless_credit_out, int? note_acceptor_cents_in, int? notes_in, int? total_5_notes_in, int? total_10_notes_in, int? total_20_notes_in, int? total_50_notes_in, int? total_100_notes_in, int? reserved_1, int? reserved_2, int? reserved_3, int? sap_wins, int? lp_wins, int? res_cred_rem_turnover, int? res_cred_rem_wins, int? cash_ticket_printer_out, int? game_turnover, int? game_stroke, int? game_wins, int? game_progressive_win, int? updated_stroke, int? updated_turnover, int? updated_wins, int? jackpot_cont, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_meters_limit_v2Async(string type, int? stroke, int? turnover, int? wins, int? cancel_credit, int? cents_in, int? cents_out, int? hopper_refill, int? token_in, int? token_out, int? token_to_cashbox, int? cashless_credit_in, int? cashless_credit_out, int? note_acceptor_cents_in, int? notes_in, int? total_5_notes_in, int? total_10_notes_in, int? total_20_notes_in, int? total_50_notes_in, int? total_100_notes_in, int? reserved_1, int? reserved_2, int? reserved_3, int? sap_wins, int? lp_wins, int? res_cred_rem_turnover, int? res_cred_rem_wins, int? cash_ticket_printer_out, int? game_turnover, int? game_stroke, int? game_wins, int? game_progressive_win, int? updated_stroke, int? updated_turnover, int? updated_wins, int? jackpot_cont, int? egm_cash_ticket_in_limit, int? egm_pid_accessed_limit, int? egm_games_won_limit, int? rejected_enabled_notes_limit, int? egm_gamble_turnover_limit, int? egm_gamble_wins_limit, int? egm_game_games_won, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_network_limitAsync(int? id, string description, int? max_denomination, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_parametersAsync(short? site_id, int? egm_serial_number, int? base_game_version_number, string software_set_app_number, short? denomination_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_services_loopAsync(short? site_id, int? egm_serial_number, string loop_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_services_loop_v2Async(short? site_id, int? egm_serial_number, string loop_name, int? device_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_templateAsync(short? id, string cabinet, short? man_id, string type, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? denom_id, short? token_id, int? tick_lim, string v_note_flg, short? max_games, string protocol, string protocol_ver, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hop_pres, string tik_ptr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_template_V2Async(short? id, string cabinet, short? man_id, string type, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? denom_id, short? token_id, int? tick_lim, string v_note_flg, short? max_games, string protocol, string protocol_ver, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hop_pres, string tik_ptr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string meters_limit_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_template_V3Async(short? id, string cabinet, short? man_id, string type, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? denom_id, short? token_id, int? tick_lim, string v_note_flg, short? max_games, string protocol, string protocol_ver, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hop_pres, string tik_ptr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string meters_limit_type, int? np_win_payout_threshold, int? sap_win_payout_threshold, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, string userid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_transactionAsync(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, string cancelled, int? amount, short? pool_site_id, int? pool_num, string user_id, int? player_id, string comment_1, string comment_2, string comment_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_transaction_statusAsync(short? site_id, decimal? tick_num, string status, DateTime? last_mod, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v10Result>> update_egm_transaction_v10Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, decimal? barcode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v11Result>> update_egm_transaction_v11Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, decimal? barcode, int? CardID, string EmployeeFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v12Result>> update_egm_transaction_v12Async(short? site_id, decimal? ticket_number, int? egm_serial_number, DateTime? transaction_datetime, string transaction_type, string new_trans_status, DateTime? last_action_datetime, DateTime? ticket_printed_datetime, int? amount, short? pool_site_id, int? pool_number, string user_id, string player_id, string employee_id, decimal? linked_ticket_number, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, decimal? barcode, int? CardID, string EmployeeFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_transaction_v2Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, string cancelled, int? amount, short? pool_site_id, int? pool_num, string user_id, int? player_id, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v3Result>> update_egm_transaction_v3Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v4Result>> update_egm_transaction_v4Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v5Result>> update_egm_transaction_v5Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v6Result>> update_egm_transaction_v6Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v7Result>> update_egm_transaction_v7Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v8Result>> update_egm_transaction_v8Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, decimal? barcode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_egm_transaction_v9Result>> update_egm_transaction_v9Async(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, DateTime? last_dt, DateTime? tick_dt, int? amount, short? pool_site_id, int? pool_num, string user_id, string player_id, string employee_id, decimal? linked_tick_num, string manually_created, string comment_1, string comment_2, string comment_3, string comment_4, string comment_5, string location, int? cash_amount, int? cheque_amount, string cheque_number, short? source_device_type, decimal? barcode, int? CardID, string EmployeeFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_turbo_wedgeAsync(int? egm_serial_number, short? site_id, int? turbo_wedge_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_turbo_wedge_v2Async(int? egm_serial_number, short? site_id, int? turbo_wedge_id, string toc_instance_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_v2Async(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string egm_meters_limit_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_v3Async(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string egm_meters_limit_type, int? np_win_payout_threshold, int? sap_win_payout_threshold, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, int? max_denomination, int? player_info_display, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_v4Async(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string egm_meters_limit_type, int? np_win_payout_threshold, int? sap_win_payout_threshold, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, int? max_denomination, int? player_info_display, int? hopper_weight, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_v5Async(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string egm_meters_limit_type, int? np_win_payout_threshold, int? sap_win_payout_threshold, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, int? max_denomination, int? player_info_display, int? hopper_weight, string downloadable_games_enabled, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_egm_v6Async(short? cur_site_id, int? egm_ser_num, short? template_id, int? plate_num, short? man_id, string type, string status, short? token_id, short? denom_id, short? max_games, short? cur_game, string cur_state, string protocol, string protocol_ver, string cabinet, string desc, int? high_win, int? high_credit, int? max_pay, int? drop_full, int? drop_choked, int? hop_fil, int? dbl_max, int? dbl_limit, short? poll_addr, int? tick_lim, string v_note_flg, string jt_id, string nte_acc_pres, string nte_acc_enbl, string bill_5, string bill_10, string bill_20, string bill_50, string bill_100, int? max_mtr_val, int? rntl_amnt, int? max_all_inc, int? base_g_ver, short? prog_sig_tim, string touch_scrn, string coin_acceptr, string hopper_present, string tik_prtr_pres, string play_track, string sw_set_app, string spare_1, string spare_2, string spare_3, string spare_4, string spare_5, string egm_meters_limit_type, int? np_win_payout_threshold, int? sap_win_payout_threshold, string ticket_in_device_present, string aux_display_device_present, string mechanical_meters_present, string denom_hot_switching_enabled, string var_hot_switching_enabled, string shared_prog_jackpots_enabled, int? max_rtp, int? min_rtp, int? max_standard_deviation, int? max_lines, int? max_bet_per_play, int? max_np_win, int? max_progressive_win, int? max_ect, int? max_denomination, int? player_info_display, int? hopper_weight, string downloadable_games_enabled, string user_id, int? tito_implementation_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_employeeAsync(decimal? id, byte? creat_sys, short? creat_site, string first_name, string mid_initial, string last_name, string name_title, string res_addr1, string res_addr2, string res_locality, string res_state, string res_country, string res_post, string pos_addr1, string pos_addr2, string locality, string state_prov, string country, string post_code, string hm_phone, string mobile, string next_of_kin, string nok_phone, DateTime? dob, string sex, string status, DateTime? creat_date, string pos_title, string lic_num, string identifier, DateTime? emp_end_dt, DateTime? emp_start_dt, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_employee_statusAsync(decimal? id, string status, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_employee_v2Async(decimal? id, byte? creat_sys, short? creat_site, string first_name, string mid_initial, string last_name, string name_title, string res_addr1, string res_addr2, string res_locality, string res_state, string res_country, string res_post, string pos_addr1, string pos_addr2, string locality, string state_prov, string country, string post_code, string hm_phone, string mobile, string next_of_kin, string nok_phone, DateTime? dob, string sex, string status, DateTime? creat_date, string pos_title, string lic_num, string identifier, DateTime? emp_end_dt, DateTime? emp_start_dt, string security_user_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_equationAsync(decimal? id, byte? system, short? css_site, byte? track_type, string desc, string expression, string method, string enabled, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_file_distributionAsync(short? site_id, string set_name, string set_type, DateTime? start_dt, DateTime? started_dt, DateTime? dwnld_c_dt, DateTime? dwnld_s_dt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_file_storeAsync(string file_name, string version, DateTime? dwnload_dt, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_file_working_setAsync(string file_name, string version, string set_name, string set_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_floor_view_detailAsync(short? site_id, int? ser_num, int? x_pos, int? y_pos, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_floor_view_masterAsync(short? site_id, short? floor_num, int? image_w, int? image_h, int? object_w, int? object_h, string file_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_game_typeAsync(int? id, int? gme_ver_num, string desc, string style, short? jp_levels, short? man_id, string qogr_enabled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_game_type_onlyAsync(int? id, int? gme_ver_num, string desc, string style, short? jp_levels, short? man_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_game_variationAsync(int? game_type_id, int? game_var_no, int? rtp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_headcount_summariseResult>> update_headcount_summariseAsync(int? egm_serial_number, short? site_id, DateTime? start_dt, short? sum_level, short? floor, short? bank, short? position, int? ssan, short? denomination, int? state, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_identification_groupAsync(short? id, string check_type, string description, short? grp_ptlim, string form_sect, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_identification_itemAsync(int? id, short? id_group, string description, short? point_val, string form_sect, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_jackpot_deltas_suspendedAsync(short? site_id, int? pool_number, short? pool_site_id, DateTime? start_datetime, short? summary_level, int? egm_serial_number, short? denomination_id, int? ssan, int? bgvn, short? floor, short? bank, short? position, short? pool_group_id, double? total_rtp, double? increment, int? reset, int? maximum, int? turnover, int? wins, int? lp_wins, int? sap_wins, int? erp_wins, int? error_code, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_jackpot_pool_site_statusAsync(short? site_id, int? pool_number, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_jackpot_pool_site_status_historyAsync(short? site_id, int? pool_number, string new_status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_jurisdictionAsync(int? id, string description, string iso_code, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_kiosk_transactionAsync(short? css_site_id, decimal? patron_id, DateTime? entry_datetime, decimal? prize_draw_id, int? prize_draw_value, decimal? ticket_id, string ticket_status, DateTime? expiry_date, string ticket_text, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_kiosk_transaction_v2Async(short? css_site_id, decimal? patron_id, DateTime? entry_datetime, decimal? prize_draw_id, int? prize_draw_value, decimal? ticket_id, string ticket_status, DateTime? expiry_date, string ticket_text, string campaign_id, short? tracking_type_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_locationAsync(short? site_id, short? floor, short? bank, short? pos, int? egm_ser_num, string pager_pos, string sec_id, string loop_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_location_midmAsync(short? site_id, short? floor, short? bank, short? pos, short? midm_card, short? midm_port, short? midm_address, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_location_pager_positionAsync(short? site_id, short? floor, short? bank, short? position, int? egm_serial_number, string pager_position, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_loop_device_applicationAsync(byte? system_id, short? css_site_id, byte? hw_dev, string app_id, int? weight, string image, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_loop_device_msg_textAsync(decimal? id, byte? system_id, short? css_site_id, short? msg_type, short? floor, short? bank, short? position, string msg_text, string enabled, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_loyalty_unitAsync(short? site_id, int? egm_serial_number, short? loyalty_unit_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_manufacturerAsync(short? id, string name, string address, string locality, string stateprov, string country, string postcode, string contact, string phone, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_master_cardAsync(int? new_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_max_change_game_configAsync(string id, short? site_id, int? base_game_version_number, int? game_version_number, int? software_set_approval_number, int? game_variation_number, short? denomination_id, DateTime? anniversary_datetime, int? anniversary_game_var_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_max_change_requestAsync(string id, short? site_id, int? egm_serial_number, byte? manufacturer_id, byte? max_change_request_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_max_change_request_detailAsync(string id, short? site_id, string max_change_request_id, string max_change_game_config_id, byte? day_of_week, DateTime? change_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_maxbonus_ticketAsync(short? site_id, int? id, string promotion_name, string promotion_criteria, string promotion_prize, DateTime? creation_datetime, short? location_floor, short? location_bank, short? location_position, int? egm_serial_number, DateTime? expiry_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membership_receiptsAsync(short? css_site_id, decimal? receipt_id, decimal? patron_id, DateTime? receipt_datetime, int? membership_id, int? membership_type_id, string user_id, int? cash_amount, int? cheque_amount, string cheque_details, int? card_amount, int? card_id, int? total_amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membership_receipts_V2Async(short? css_site_id, decimal? receipt_id, decimal? patron_id, DateTime? receipt_datetime, int? membership_id, int? membership_type_id, string user_id, int? cash_amount, int? cheque_amount, string cheque_details, int? card_amount, int? card_id, int? total_amount, decimal? parent_patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membership_receipts_V3Async(short? css_site_id, decimal? receipt_id, decimal? patron_id, DateTime? receipt_datetime, int? membership_id, int? membership_type_id, string user_id, int? cash_amount, int? cheque_amount, string cheque_details, int? card_amount, int? card_id, int? total_amount, decimal? parent_patron_id, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membership_typeAsync(int? id, byte? system, short? site, string desc, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membershiptype_v2Async(int? id, byte? system_id, short? css_site_id, string description, int? membership_fee, DateTime? expiry_date, short? expiry_period, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membershiptype_V3Async(int? id, byte? system_id, short? css_site_id, string description, int? membership_fee, DateTime? expiry_date, short? expiry_period, string associate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_membershiptype_V4Async(int? id, byte? system_id, short? css_site_id, string description, int? membership_fee, DateTime? expiry_date, short? expiry_period, string associate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_money_boxAsync(short? site_id, string box_number, string type, int? weight, DateTime? datetime_calibrated, DateTime? clearance_start_datetime, int? egm_serial_number, string comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_network_deviceAsync(decimal? id, short? site_id, int? network_device_type_id, string description, string network_address, short? floor, short? bank, string location, string configuration, string enabled, string downloadable, short? x, short? y, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_network_device_typeAsync(int? id, string category, string subcategory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_network_device_v2Async(decimal? id, short? site_id, int? network_device_type_id, string description, string network_address, short? floor, short? bank, string location, string configuration, string enabled, string downloadable, short? x, short? y, int? serial_number, string security_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_note_countAsync(short? site_id, DateTime? entry_datetime, string money_box_number, int? egm_serial_number, string count_status, int? notes_in_amt, int? notes_in_cnt, int? notes_in_cnt_5, int? notes_in_cnt_10, int? notes_in_cnt_20, int? notes_in_cnt_50, int? notes_in_cnt_100, int? spare_1, int? spare_2, int? spare_3, DateTime? logged_datetime, string comments, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pagerAsync(decimal? id, byte? system_id, short? css_site_id, string capcode, string description, string enabled_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pager_categoryAsync(decimal? pager_id, decimal? category_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pager_eventAsync(decimal? id, int? event_type_id, short? css_site_id, string display_text, string paging_enabled_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pager_transportAsync(int? id, string description, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pager_v2Async(decimal? id, byte? system_id, short? css_site_id, string capcode, string description, string enabled_flag, int? pager_transport_id, decimal? parent_pager_id, string address, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pager_zoneAsync(decimal? pager_id, int? zone_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pat_contact_subscriptionAsync(string patron_id, short? contact_type_id, string subscribed_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patronAsync(decimal? id, byte? creat_sys, short? creat_site, string first_name, string mid_initial, string last_name, string other_name, string name_title, string res_addr1, string res_addr2, string res_locality, string res_state, string res_country, string res_post, string pos_addr1, string pos_addr2, string locality, string state_prov, string country, string post_code, string hm_phone, string wk_phone, string fax, string mobile, string email, string next_of_kin, string nok_phone, DateTime? dob, string sex, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, int? mem_id, DateTime? last_mod, int? rat_grade, int? jurisdiction, string mail_out, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_acc_permissionAsync(decimal? account_id, decimal? patron_id, short? permission, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_age_groupAsync(int? id, byte? system_id, short? site_id, string description, int? min_age, int? max_age, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_associationAsync(short? css_site_id, decimal? parent_patron_id, decimal? associate_patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_bankingAsync(decimal? id, decimal? patron_id, string bank_type, string sub_type, DateTime? expiry_dt, string detail_1, string detail_2, string detail_3, string detail_4, string detail_5, string detail_6, short? priority, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_patron_card_statusResult>> update_patron_card_statusAsync(decimal? patron_id, string patron_status_from, string patron_status_to, DateTime? suspend_start_datetime, DateTime? suspend_end_datetime, DateTime? last_modified_datetime, int? cascade_to_cards, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_commentAsync(decimal? patron_id, string comment_field, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_contactAsync(decimal? patron_id, short? contact_type_id, string points_awarded_flag, DateTime? last_contact_request_datetime, string subscribed_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_contact_historyAsync(decimal? patron_id, short? contact_type_id, string contact_details, string bounced_flag, string notified_kiosk_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_extraAsync(decimal? patron_id, decimal? patron_extra_type_id, string detail_value, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_extra_typeAsync(decimal? id, byte? system_id, short? site_id, string description, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_groupAsync(int? id, byte? system, short? site, string desc, string type, string status, DateTime? create_dt, DateTime? expire_dt, DateTime? suspend_start_dt, DateTime? suspend_end_dt, DateTime? tour_start_dt, DateTime? tour_end_dt, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_group_memberAsync(decimal? patron, int? group, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_identificationAsync(decimal? id, decimal? patron_id, int? id_item, DateTime? ref_dt, short? point_val, string img_loc, short? loc_site, string detail_1, string detail_2, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_identification_V2Async(decimal? id, decimal? patron_id, int? id_item, DateTime? ref_dt, short? point_val, string img_loc, short? loc_site, string detail_1, string detail_2, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_last_activityAsync(decimal? patron_id, int? card_id, DateTime? last_kiosk_activity, DateTime? last_egm_activity, DateTime? last_pos_activity, DateTime? last_barrel_draw_ticket, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_last_sessionAsync(decimal? id, DateTime? last_sess, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_mail_out_flagAsync(decimal? patron_id, string mail_out_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_membership_histAsync(short? css_site_id, decimal? patron_id, DateTime? transaction_datetime, string old_status, string new_status, DateTime? old_expiry_datetime, DateTime? new_expiry_datetime, int? old_membership_type, int? new_membership_type, decimal? associate_patron_id, decimal? parent_patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_membership_typeAsync(decimal? id, int? mem_type, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_membership_type_v2Async(decimal? id, int? mem_type, string user_id, DateTime? last_mod, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_preferenceAsync(decimal? patron, int? pref_group, int? pref_type, byte? system, short? site, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_preference_groupAsync(int? id, byte? system, short? site, string desc, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_preference_typeAsync(int? pref_group, int? id, byte? system, short? site, string desc, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_ratingAsync(decimal? id, int? rating, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_rating_historyAsync(short? css_site_id, decimal? patron_id, int? rating_grade_id, DateTime? rating_datetime, string rating_for_life, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_statusAsync(decimal? id, string status, DateTime? last_mod, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_patron_v2Async(decimal? id, byte? creat_sys, short? creat_site, string first_name, string mid_initial, string last_name, string other_name, string name_title, string res_addr1, string res_addr2, string res_locality, string res_state, string res_country, string res_post, string pos_addr1, string pos_addr2, string locality, string state_prov, string country, string post_code, string hm_phone, string wk_phone, string fax, string mobile, string email, string next_of_kin, string nok_phone, DateTime? dob, string sex, string status, DateTime? creat_date, DateTime? exp_date, DateTime? susp_start, DateTime? susp_end, int? mem_id, DateTime? last_mod, int? rat_grade, int? jurisdiction, string mail_out, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_player_choice_statsAsync(short? site_id, short? manufacturer_id, int? ssan, int? game_version_number, DateTime? start_datetime, int? number_of_elements, int? element_size, string player_choices_array, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_player_exclusion_patron_typesAsync(short? site_id, decimal? transaction_id, decimal? patron_id, byte? exclusion_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_player_exclusion_transactionAsync(decimal? transaction_id, short? site_id, decimal? patron_id, byte? transaction_type_id, byte? exclusion_type_id, DateTime? transaction_datetime, string user_id, string comment_1, string comment_2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_configurationAsync(short? css_site_id, decimal? id, string enabled_flag, short? tracking_type_id, short? point_purge_timeframe_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_configuration_v2Async(short? css_site_id, decimal? id, string enabled_flag, short? tracking_type_id, short? point_purge_timeframe_id, string user_id, DateTime? event_time, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_membership_noAsync(decimal? id, decimal? point_purge_configuration_id, int? membership_id_min, int? membership_id_max, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_membership_no_v2Async(decimal? id, decimal? point_purge_configuration_id, int? membership_id_min, int? membership_id_max, short? css_site_id, string user_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_membership_typeAsync(decimal? point_purge_configuration_id, int? membership_type_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_membership_type_v2Async(decimal? point_purge_configuration_id, int? membership_type_id, short? css_site_id, string user_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_pat_statusAsync(decimal? point_purge_configuration_id, string patron_status, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_pat_status_v2Async(decimal? point_purge_configuration_id, string patron_status, short? css_site_id, string user_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_ratingAsync(decimal? point_purge_configuration_id, int? rating_grade_id, short? css_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_rating_v2Async(decimal? point_purge_configuration_id, int? rating_grade_id, short? css_site_id, string user_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_timeframeAsync(short? css_site_id, decimal? id, decimal? point_purge_configuration_id, DateTime? configuration_datetime, string configuration_string, byte? configuration_number, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_point_purge_timeframe_v2Async(short? css_site_id, decimal? id, decimal? point_purge_configuration_id, DateTime? configuration_datetime, string configuration_string, byte? configuration_number, string user_id, DateTime? EventTime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_points_play_configurationAsync(decimal? id, short? css_site_id, string enabled_flag, string description, DateTime? creation_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_points_play_denominationAsync(decimal? points_play_configuration_id, short? css_site_id, decimal? drawdown_denomination_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_points_play_rating_gradeAsync(decimal? points_play_configuration_id, short? css_site_id, decimal? rating_grade_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_points_play_tracking_typeAsync(decimal? points_play_configuration_id, short? css_site_id, byte? tracking_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_points_play_transactionResult>> update_points_play_transactionAsync(short? site_id, decimal? patron_id, DateTime? transaction_datetime, int? egm_serial_number, int? card_id, int? cashless_in_meter_before, int? cashless_in_meter_after, string ssan, short? position, short? css_site_id, int? transaction_id, decimal? points_play_configuration_id, decimal? points_deducted, decimal? points_balance, decimal? ect_amount, short? summary_level, short? floor, short? bank, short? denomination_id, int? egm_cashless_transaction_type_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_poolAsync(short? site_id, int? pool_num, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, string wghted_flag, string prze_share, int? update_time, string sub_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pool_deviceAsync(short? pl_site_id, int? pool_num, int? egm_ser_num, short? gme_num, int? lh_meter, int? overflow, string dev_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pool_groupAsync(short? site_id, short? group_id, string desc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pool_group_levelAsync(short? site_id, short? jp_grp_id, short? level_num, short? pool_site, int? pool_num, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_pool_group_v2Async(short? site_id, short? group_id, string desc, string group_type, string shared_progressive_flag, DateTime? date_retired, int? approval_number, string approval_name, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedrawAsync(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_V2Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_V3Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_v4Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string simplay_trigger_prize, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_v5Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string simplay_trigger_prize, DateTime? second_chance_draw, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_v6Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string simplay_trigger_prize, DateTime? second_chance_draw, string rating_grade_list, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_v7Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string simplay_trigger_prize, DateTime? second_chance_draw, string rating_grade_list, string print_expiry_date_flag, string prize_does_not_expire_flag, string prize_expires_end_of_month_flag, DateTime? prize_expiry_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_prizedraw_v8Async(decimal? id, short? css_site_id, string prize_description, string enabled, string prize_type, int? probability, DateTime? starts, DateTime? ends, string day_of_week, string month_of_year, int? prize_value, int? points_value, int? points_type, string you_have_won, int? days_to_expiry, string ticket_text, int? RatingGrade, string birthday_prize_criteria_type, int? birthday_prize_days_span, int? prize_quantity, string simplay_trigger_prize, DateTime? second_chance_draw, string rating_grade_list, string print_expiry_date_flag, string prize_does_not_expire_flag, string prize_expires_end_of_month_flag, DateTime? prize_expiry_datetime, string sex, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_bank_depositsAsync(short? site_id, short? deposit_number, DateTime? deposit_date, int? deposit_amount, string comment_1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_bank_deposits_v2Async(short? site_id, short? deposit_number, DateTime? deposit_date, int? deposit_amount, string comment_1, decimal? simplay_deposit_amount, decimal? atm_refill, decimal? atm_refill_reimbursement, DateTime? reimbursement_date, string ref_deposit_num, decimal? simplay_float_variance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_seedsAsync(DateTime? seed_date, string seed, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_seeds_bulkAsync(int? year, int? month, string seed01, string seed02, string seed03, string seed04, string seed05, string seed06, string seed07, string seed08, string seed09, string seed10, string seed11, string seed12, string seed13, string seed14, string seed15, string seed16, string seed17, string seed18, string seed19, string seed20, string seed21, string seed22, string seed23, string seed24, string seed25, string seed26, string seed27, string seed28, string seed29, string seed30, string seed31, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_seeds_v2Async(DateTime? seed_date, string seed, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_signature_listAsync(string soft_app_num, string soft_id, short? man_id, string soft_name, DateTime? sig_date, string signature, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_signature_list_v2Async(string soft_app_num, string soft_id, short? man_id, string soft_name, DateTime? sig_date, string signature, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_signatures_bulkAsync(int? year, int? month, int? manufacturerId, string softwareSetApprovalNumber, string softwareSetName, string signature01, string signature02, string signature03, string signature04, string signature05, string signature06, string signature07, string signature08, string signature09, string signature10, string signature11, string signature12, string signature13, string signature14, string signature15, string signature16, string signature17, string signature18, string signature19, string signature20, string signature21, string signature22, string signature23, string signature24, string signature25, string signature26, string signature27, string signature28, string signature29, string signature30, string signature31, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_egm_software_setAsync(int? soft_app_num, int? soft_id, short? man_id, string soft_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_jackpot_approvalAsync(int? pool_number, int? approval_number, int? variation_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_jackpot_approval_v2Async(int? pool_number, int? approval_number, int? set_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_qogr_seal_approval_V2Async(short? site_id, int? serial_number, DateTime? start_datetime, string name, string licence_number, string old_seal_number, string new_seal_number, int? authority_number, short? device_type_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_random_member_drawAsync(short? css_site_id, int? draw_number, DateTime? draw_datetime, decimal? patron_id, int? membership_id, string prize_description, string claimed, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_rating_gradeAsync(int? id, byte? system_id, short? site_id, string description, int? track_id, decimal? min_level, decimal? max_level, string method_type, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_rating_grade_v2Async(int? id, byte? system_id, short? site_id, string description, int? track_id, decimal? min_level, decimal? max_level, string method_type, string rating_grade_for_life, short? rating_grade_for_life_months, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_itemAsync(decimal? id, byte? system_id, short? site_id, string description, int? mon_value, byte? track_id, string cash_flag, string available, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_item_v2Async(decimal? id, byte? system_id, short? site_id, string description, int? mon_value, byte? track_id, string cash_flag, string available, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_item_v3Async(decimal? id, byte? system_id, short? site_id, string description, int? mon_value, byte? track_id, string cash_flag, string available, string comment_1, string comment_2, string comment_3, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_item_v4Async(decimal? id, byte? system_id, short? site_id, string description, int? mon_value, byte? track_id, string cash_flag, string available, string comment_1, string comment_2, string comment_3, string user_id, int? quantity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_item_v5Async(decimal? id, byte? system_id, short? site_id, string description, int? mon_value, byte? track_id, string cash_flag, string available, string comment_1, string comment_2, string comment_3, string user_id, int? quantity, string rating_grades, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_voucherAsync(decimal? id, byte? system_id, short? site_id, decimal? account_id, decimal? patron_id, DateTime? creat_date, DateTime? exp_date, decimal? red_item, decimal? amount, int? quantity, string comment_1, string comment_2, string comment_3, string status, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_voucher_V2Async(decimal? id, byte? system_id, short? site_id, decimal? account_id, decimal? patron_id, DateTime? creat_date, DateTime? exp_date, decimal? red_item, decimal? amount, int? quantity, string comment_1, string comment_2, string comment_3, string status, decimal? linked_voucher, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_redemption_voucher_v3Async(decimal? id, byte? system_id, short? site_id, decimal? account_id, decimal? patron_id, DateTime? creat_date, DateTime? exp_date, decimal? red_item, decimal? amount, int? quantity, string comment_1, string comment_2, string comment_3, string status, decimal? linked_voucher, DateTime? event_time, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_revenue_summaryResult>> update_revenue_summaryAsync(short? site_id, DateTime? clearance_start_datetime, int? egm_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_s_batch_confirm_typeAsync(decimal? id, byte? system_id, short? css_site_id, int? batch_type, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_sec_groups_unloadAsync(short? site_id, string group_name, string user_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_sec_info_unloadAsync(short? site_id, string application, string window, string control, string user_name, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_sec_users_unloadAsync(short? site_id, string name, string description, int? priority, int? user_type, string password, DateTime? password_expires, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_security_groupingsAsync(short? site_id, string group_name, string user_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_security_infoAsync(short? site_id, string application, string window, string control, string user_name, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_security_usersAsync(short? site_id, string name, string description, int? priority, int? user_type, string password, DateTime? password_expires, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_signatureAsync(short? site_id, decimal? ticket_number, int? egm_serial_number, DateTime? transaction_datetime, string user_id, DateTime? last_action_datetime, Guid? signature_link_id, Guid? attendant_signature_id, string attendant_name, string attendant_licence, string attendant_signature, Guid? winner_signature_id, string winner_name, string winner_address, string winner_phone, string winner_signature, Guid? witness_signature_id, string witness_name, string witness_licence, string witness_signature, Guid? manager_signature_id, string manager_name, string manager_licence, string manager_signature, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_signature_v2Async(short? site_id, decimal? ticket_number, int? egm_serial_number, DateTime? transaction_datetime, string user_id, DateTime? last_action_datetime, Guid? signature_link_id, Guid? attendant_signature_id, string attendant_name, string attendant_licence, string attendant_signature, Guid? winner_signature_id, string winner_name, string winner_address, string winner_phone, string winner_signature, Guid? witness_signature_id, string witness_name, string witness_licence, string witness_signature, Guid? manager_signature_id, string manager_name, string manager_licence, string manager_signature, short? source_device_type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_siteAsync(short? id, int? licence_num, string licence_name, string premises, string address, string locality, string state, string country, string post_code, string contact_name, string phone, string fax, string pager, string mobile, string email, string lic_op, short? app_egm_nums, string lic_type, string lic_status, DateTime? lic_date, DateTime? expiry_date, string stat_div, int? app_loc_id, string jurisdiction, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_drop_varianceAsync(short? site_id, DateTime? start_datetime, string entry_type, int? variance, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_group_memberAsync(byte? gp_host_sys, short? mem_site, short? gp_host_site, string receive_replicated_data_flag, string primary_site_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_hourly_summaryAsync(short? site_id, DateTime? snapshot_datetime, int? turnover, int? head_count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_hourly_summary_v2Async(short? site_id, DateTime? snapshot_datetime, int? turnover, int? head_count, int? all_wins, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_hourly_summary_v3Async(short? site_id, DateTime? snapshot_datetime, int? turnover, int? head_count, int? all_wins, int? cash_clearance, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_hourly_summary_v4Async(short? site_id, DateTime? snapshot_datetime, int? turnover, int? head_count, int? all_wins, int? cash_clearance, byte? denomination_id, int? stroke, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_points_conversionAsync(short? site_id, byte? system_site_track_type_id_from, byte? system_site_track_type_id_to, short? rate_from, short? rate_to, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_serial_numberAsync(short? site_id, int? old_serial_number, int? new_serial_number, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_site_v2Async(short? id, int? licence_num, string licence_name, string premises, string address, string locality, string state, string country, string post_code, string contact_name, string phone, string fax, string pager, string mobile, string email, string lic_op, short? app_egm_nums, string lic_type, string lic_status, DateTime? lic_date, DateTime? expiry_date, string stat_div, int? app_loc_id, string jurisdiction, short? jurisdiction_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_spend_reward_criterionAsync(decimal? id, short? css_site_id, int? rating_grade_id, short? tracking_type_id, short? spend_reward_reset_timer_id, int? points_value, int? spend_value, short? repeat_count, string enabled_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_ssanAsync(int? egm_ser_num, string sw_set_app, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_state_provinceAsync(int? id, int? country, string desc, string iso_code, string phone_prefix, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_suspend_card_statusAsync(decimal? card_id, string card_status_from, string card_status_to, DateTime? suspend_start_datetime, DateTime? suspend_end_datetime, DateTime? last_modified_datetime, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_system_siteAsync(short? css_site_id, byte? system_id, short? site_id, string lic_op, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_system_site_track_typeAsync(int? id, byte? system_id, short? site_id, byte? track_type, string disp_name, byte? period_type, short? aging_per, DateTime? first_date, string gemini_disp, string group_flag, decimal? mon_unit, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_system_site_track_type_v2Async(int? id, byte? system_id, short? site_id, byte? track_type, string disp_name, byte? period_type, short? aging_per, DateTime? first_date, string gemini_disp, string group_flag, decimal? mon_unit, string kiosk_display_flag, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_tax_rateAsync(int? id, int? gm_type, int? jurisdiction_id, string rate_type, decimal? rate, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_ticket_autopay_failedAsync(short? site_id, decimal? tick_num, int? egm_ser_num, DateTime? trans_dt, string trans_type, string trans_stat, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_tito_ticket_transaction_summaryAsync(short? site_id, int? egm_serial_number, short? summary_level, DateTime? transaction_datetime, short? tito_ticket_transaction_type_id, short? tito_implementation_type_id, short? floor, short? bank, short? position, string ssan, short? denomination_id, int? amount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_tokenAsync(short? id, string representation, int? base_currency_value, int? standard_weight, int? calibrated_weight, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_track_type_permissionAsync(int? track_id, byte? trans_id, byte? system_id, short? site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_turnover_thrd_groupAsync(int? id, string description, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_turnover_thresholdAsync(int? id, int? turnover_threshold_group_id, int? start_range, int? end_range, string rate, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<update_voucherResult>> update_voucherAsync(short? site_id, decimal? ticket_number, decimal? barcode, string new_trans_status, DateTime? last_action_datetime, int? redemption_amount, string user_id, short? terminal_type_id, decimal? network_device_id, string source, string terminal_id, bool? rounding_validation, bool? short_pay_rounding, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_voucher_configAsync(short? site_id, int? voucher_type_id, int? min_payout, string manual, int? copies, string comment_1, string comment_2, string comment_3, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_voucher_sig_configAsync(int? id, short? site_id, int? voucher_type_id, string description, int? min_value, int? max_value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_voucher_signatureAsync(short? site_id, int? voucher_type_id, int? config_id, int? row_number, int? col_number, string signature_label, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_voucher_statusAsync(decimal? id, string status, DateTime? last_mod, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_wa_poolAsync(short? site_id, int? pool_number, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, int? current_value, DateTime? curr_val_logged_dt, DateTime? last_hit, string wghted_flag, int? current_fill_value, int? current_overflow, string prze_share, int? update_time, string sub_type, string status, int? max_autopay, int? prize_value, double? total_rtp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_wa_pool_v2Async(short? site_id, int? pool_number, string pool_type, string pool_name, int? reset, int? max_val, float? inc, DateTime? created, DateTime? retired, int? current_value, DateTime? curr_val_logged_dt, DateTime? last_hit, string wghted_flag, int? current_fill_value, int? current_overflow, string prze_share, int? update_time, string sub_type, string status, int? max_autopay, int? prize_value, double? total_rtp, double? auxiliary_rtp, string level_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_wab_group_memberAsync(short? group_site_id, short? member_site_id, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_win_reward_conversionAsync(short? css_site_id, decimal? win_reward_criterion_id, int? rating_grade_id, short? tracking_type_id, short? conversion_rate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_win_reward_criterionAsync(decimal? id, short? css_site_id, string description, int? minimum_win_threshold, short? tracking_type_id, string colour, string enabled_flag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_working_setAsync(string set_name, string set_type, string fallback, string prerun, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> update_zoneAsync(int? id, byte? system_id, short? css_site_id, string description, int? colour, string user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> validate_account_card_patronAsync(int? card_id, int? transaction_type, byte? track_type, byte? system_id, OutputParameter<string> account_id, OutputParameter<string> patron_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> validate_ALH_site_card_memberAsync(string card_id, int? membership_id, string transaction_type, OutputParameter<int?> site_id, OutputParameter<string> result, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> validate_cardAsync(int? card_id, string get_patron_flag, byte? system_id, byte? track_type, OutputParameter<string> card_functionality_list, OutputParameter<string> display_name, OutputParameter<string> card_status, OutputParameter<string> patron_name, OutputParameter<string> patron_status, OutputParameter<string> avail_bal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> validate_egm_transactionAsync(short? site_id, decimal? ticket_number, int? egm_serial_number, DateTime? transaction_datetime, string trans_type, string new_trans_status, DateTime? last_action_datetime, DateTime? ticket_print_datetime, int? amount, string player_id, decimal? linked_ticket_number, int? card_id, OutputParameter<string> current_trans_status, OutputParameter<string> out_duplicate_Flag, OutputParameter<string> out_existing_trans, OutputParameter<string> out_log_revenue, OutputParameter<int?> out_can_cred, OutputParameter<int?> out_hop_fil, OutputParameter<int?> out_short_pays, OutputParameter<int?> out_actual_ticket_out, OutputParameter<int?> current_floor, OutputParameter<int?> current_bank, OutputParameter<int?> current_position, OutputParameter<int?> current_denomination_id, OutputParameter<int?> current_ssan, OutputParameter<int?> current_bgvn, OutputParameter<decimal?> out_card_holder_id, OutputParameter<int?> proc_return_code, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> validate_tito_voucherAsync(short? site_id, decimal? barcode, short? terminal_type_id, DateTime? request_datetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> wa_jackpot_deficit_analyserAsync(int? wa_pool_number, DateTime? date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> wa_jackpot_lvl2_totalsAsync(int? site_id, int? wa_pool_number, int? month_num, int? year, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> wed_upd_statsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
